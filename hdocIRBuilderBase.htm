<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta charset="utf-8"><meta content="width=device-width, initial-scale=1" name="viewport"><title>class IRBuilderBase: LLVM/Clang 15.x documentation</title><link href="hdocIRBuilderBase_files/styles.css" rel="stylesheet"><script src="hdocIRBuilderBase_files/highlight.min.js"></script><script>hljs.highlightAll();</script><link href="hdocIRBuilderBase_files/katex.min.css" rel="stylesheet"><script src="hdocIRBuilderBase_files/katex.min.js"></script><script src="hdocIRBuilderBase_files/auto-render.min.js"></script><script>
    document.addEventListener("DOMContentLoaded", function() {
      renderMathInElement(document.body, {
        delimiters: [
          {left: '$$', right: '$$', display: true},
          {left: '$', right: '$', display: false},
        ],
      });
    });
  </script><link href="https://docs.hdoc.io/hdoc/llvm-project/apple-touch-icon.png" sizes="180x180" rel="apple-touch-icon"><link href="https://docs.hdoc.io/hdoc/llvm-project/favicon-32x32.png" sizes="32x32" type="image/png" rel="icon"><link href="https://docs.hdoc.io/hdoc/llvm-project/favicon-16x16.png" sizes="16x16" type="image/png" rel="icon"></head><body><div id="wrapper"><section class="section"><div class="container"><div class="columns"><aside class="column is-one-fifth"><ul class="menu-list"><p class="is-size-4">LLVM/Clang 15.x</p><p class="menu-label">Navigation</p><li><a href="https://docs.hdoc.io/hdoc/llvm-project/index.html">Home</a></li><li><a href="https://docs.hdoc.io/hdoc/llvm-project/search.html">Search</a></li><li><a href="https://github.com/hdoc/llvm-project/">Repository</a></li><li><a href="https://hdoc.io/">Made with hdoc</a></li><p class="menu-label">Pages</p><li><a href="https://docs.hdoc.io/hdoc/llvm-project/docGetting%20Started.html">Getting Started</a></li><li><a href="https://docs.hdoc.io/hdoc/llvm-project/docBuilding%20LLVM.html">Building LLVM</a></li><li><a href="https://docs.hdoc.io/hdoc/llvm-project/docCoding%20Standards.html">Coding Standards</a></li><p class="menu-label">API Documentation</p><li><a href="https://docs.hdoc.io/hdoc/llvm-project/functions.html">Functions</a></li><li><a href="https://docs.hdoc.io/hdoc/llvm-project/records.html">Records</a></li><li><a href="https://docs.hdoc.io/hdoc/llvm-project/enums.html">Enums</a></li><li><a href="https://docs.hdoc.io/hdoc/llvm-project/namespaces.html">Namespaces</a></li></ul></aside><div class="column" style="overflow-x: auto"><nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="https://docs.hdoc.io/hdoc/llvm-project/namespaces.html#00A4DA910CC17C2D"><span>namespace llvm</span></a></li><li class="is-active"><a aria-current="pageE5A4CCEEE8EE3C7D"><span>class IRBuilderBase</span></a></li></ul></nav><main class="content"><h1>class IRBuilderBase</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IRBuilderBase</span> {</span> <span class="hljs-comment">/* full declaration omitted */</span> };</code></pre><h2>Description</h2><p>Common base class shared among various IRBuilders.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L93">llvm/include/llvm/IR/IRBuilder.h:93</a></p><h2>Member Variables</h2><dl><dt class="is-family-code" id="var_MetadataToCopy">private  <a href="https://docs.hdoc.io/hdoc/llvm-project/r62CD0592E97953B6.html">SmallVector</a>&lt;std::pair&lt;unsigned int, MDNode*&gt;, 2&gt; <b>MetadataToCopy</b></dt><dd>Pairs of (metadata kind, MDNode *) that should be added to all newly created instructions, like !dbg metadata.</dd><dt class="is-family-code" id="var_BB">protected  <a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>* <b>BB</b></dt><dt class="is-family-code" id="var_InsertPt">protected  <a href="https://docs.hdoc.io/hdoc/llvm-project/r360F37E943D71FA0.html">BasicBlock::iterator</a> <b>InsertPt</b></dt><dt class="is-family-code" id="var_Context">protected  <a href="https://docs.hdoc.io/hdoc/llvm-project/rB8F46D3CD599E2BD.html">llvm::LLVMContext</a>&amp; <b>Context</b></dt><dt class="is-family-code" id="var_Folder">protected  const <a href="https://docs.hdoc.io/hdoc/llvm-project/r037E035A93C2BFED.html">llvm::IRBuilderFolder</a>&amp; <b>Folder</b></dt><dt class="is-family-code" id="var_Inserter">protected  const <a href="https://docs.hdoc.io/hdoc/llvm-project/r711847BDF35F862C.html">llvm::IRBuilderDefaultInserter</a>&amp; <b>Inserter</b></dt><dt class="is-family-code" id="var_DefaultFPMathTag">protected  <a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>* <b>DefaultFPMathTag</b></dt><dt class="is-family-code" id="var_FMF">protected  <a href="https://docs.hdoc.io/hdoc/llvm-project/rB015E228FFC78DC5.html">llvm::FastMathFlags</a> <b>FMF</b></dt><dt class="is-family-code" id="var_IsFPConstrained">protected  bool <b>IsFPConstrained</b> = false</dt><dt class="is-family-code" id="var_DefaultConstrainedExcept">protected  fp::ExceptionBehavior <b>DefaultConstrainedExcept</b> = fp::ebStrict</dt><dt class="is-family-code" id="var_DefaultConstrainedRounding">protected  llvm::RoundingMode <b>DefaultConstrainedRounding</b> = RoundingMode::Dynamic</dt><dt class="is-family-code" id="var_DefaultOperandBundles">protected  <a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::OperandBundleDef&gt; <b>DefaultOperandBundles</b></dt></dl><h2>Method Overview</h2><ul><li class="is-family-code">public void  <a href="#2ACAC97BE2280907"><b>AddMetadataToInst</b></a>(llvm::Instruction * I) const</li><li class="is-family-code">private void  <a href="#158A690CE92B3AF4"><b>AddOrRemoveMetadataToCopy</b></a>(unsigned int Kind, llvm::MDNode * MD)</li><li class="is-family-code">public void  <a href="#CFE512771B15ACDF"><b>ClearInsertionPoint</b></a>()</li><li class="is-family-code">public void  <a href="#6E71CCBFA1869E1D"><b>CollectMetadataToCopy</b></a>(llvm::Instruction * Src, ArrayRef&lt;unsigned int&gt; MetadataKinds)</li><li class="is-family-code">public llvm::Value *  <a href="#F4CFD2E0DB071661"><b>CreateAShr</b></a>(llvm::Value * LHS, uint64_t RHS, const llvm::Twine &amp; Name = "", bool isExact = false)</li><li class="is-family-code">public llvm::Value *  <a href="#64110B82B0612464"><b>CreateAShr</b></a>(llvm::Value * LHS, const llvm::APInt &amp; RHS, const llvm::Twine &amp; Name = "", bool isExact = false)</li><li class="is-family-code">public llvm::Value *  <a href="#23C6A2471F9C47D0"><b>CreateAShr</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", bool isExact = false)</li><li class="is-family-code">public llvm::Value *  <a href="#5794DCC12834D6EE"><b>CreateAdd</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", bool HasNUW = false, bool HasNSW = false)</li><li class="is-family-code">public llvm::CallInst *  <a href="#0AE15FDBFEDB70AA"><b>CreateAddReduce</b></a>(llvm::Value * Src)</li><li class="is-family-code">public llvm::Value *  <a href="#336EE9CA19D6D306"><b>CreateAddrSpaceCast</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::ReturnInst *  <a href="#26252362143F69DF"><b>CreateAggregateRet</b></a>(llvm::Value *const * retVals, unsigned int N)</li><li class="is-family-code">public llvm::LoadInst *  <a href="#C374C2A3D851C599"><b>CreateAlignedLoad</b></a>(llvm::Type * Ty, llvm::Value * Ptr, llvm::MaybeAlign Align, const char * Name)</li><li class="is-family-code">public llvm::LoadInst *  <a href="#5A2B6A13102038EC"><b>CreateAlignedLoad</b></a>(llvm::Type * Ty, llvm::Value * Ptr, llvm::MaybeAlign Align, bool isVolatile, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::LoadInst *  <a href="#610AFF2D7F1DBACF"><b>CreateAlignedLoad</b></a>(llvm::Type * Ty, llvm::Value * Ptr, llvm::MaybeAlign Align, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::StoreInst *  <a href="#2A90ED73DAC8A71C"><b>CreateAlignedStore</b></a>(llvm::Value * Val, llvm::Value * Ptr, llvm::MaybeAlign Align, bool isVolatile = false)</li><li class="is-family-code">public llvm::CallInst *  <a href="#34095886E08C4471"><b>CreateAlignmentAssumption</b></a>(const llvm::DataLayout &amp; DL, llvm::Value * PtrValue, unsigned int Alignment, llvm::Value * OffsetValue = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#19AAA5F8AADBD6A7"><b>CreateAlignmentAssumption</b></a>(const llvm::DataLayout &amp; DL, llvm::Value * PtrValue, llvm::Value * Alignment, llvm::Value * OffsetValue = nullptr)</li><li class="is-family-code">private llvm::CallInst *  <a href="#90FD5B5D22D2F1DA"><b>CreateAlignmentAssumptionHelper</b></a>(const llvm::DataLayout &amp; DL, llvm::Value * PtrValue, llvm::Value * AlignValue, llvm::Value * OffsetValue)</li><li class="is-family-code">public llvm::AllocaInst *  <a href="#E9F0129458B45709"><b>CreateAlloca</b></a>(llvm::Type * Ty, llvm::Value * ArraySize = nullptr, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::AllocaInst *  <a href="#4DB196DD2076A259"><b>CreateAlloca</b></a>(llvm::Type * Ty, unsigned int AddrSpace, llvm::Value * ArraySize = nullptr, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#55F68FDC7219F79A"><b>CreateAnd</b></a>(llvm::Value * LHS, uint64_t RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#EA440AF5ACFBE183"><b>CreateAnd</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#8F7B06F3A7846424"><b>CreateAnd</b></a>(llvm::Value * LHS, const llvm::APInt &amp; RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#E8B637343C3B8B21"><b>CreateAnd</b></a>(ArrayRef&lt;llvm::Value *&gt; Ops)</li><li class="is-family-code">public llvm::CallInst *  <a href="#04D714D06415AC7F"><b>CreateAndReduce</b></a>(llvm::Value * Src)</li><li class="is-family-code">public llvm::CallInst *  <a href="#831F87EC6A9F6089"><b>CreateArithmeticFence</b></a>(llvm::Value * Val, llvm::Type * DstType, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#26DC22768618D46D"><b>CreateAssumption</b></a>(llvm::Value * Cond, ArrayRef&lt;llvm::OperandBundleDef&gt; OpBundles = llvm::None)</li><li class="is-family-code">public llvm::AtomicCmpXchgInst *  <a href="#AEDB082818F10CC1"><b>CreateAtomicCmpXchg</b></a>(llvm::Value
 * Ptr, llvm::Value * Cmp, llvm::Value * New, llvm::MaybeAlign Align, 
llvm::AtomicOrdering SuccessOrdering, llvm::AtomicOrdering 
FailureOrdering, SyncScope::ID SSID = SyncScope::System)</li><li class="is-family-code">public llvm::AtomicRMWInst *  <a href="#275A574BE6CDF8B5"><b>CreateAtomicRMW</b></a>(AtomicRMWInst::BinOp
 Op, llvm::Value * Ptr, llvm::Value * Val, llvm::MaybeAlign Align, 
llvm::AtomicOrdering Ordering, SyncScope::ID SSID = SyncScope::System)</li><li class="is-family-code">public llvm::Value *  <a href="#A1DA3D9789C68C01"><b>CreateBinOp</b></a>(Instruction::BinaryOps
 Opc, llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name
 = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#B45282B483B5DB51"><b>CreateBinaryIntrinsic</b></a>(Intrinsic::ID
 ID, llvm::Value * LHS, llvm::Value * RHS, llvm::Instruction * FMFSource
 = nullptr, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#7B3916812EF69CF5"><b>CreateBitCast</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#D318413084BA977A"><b>CreateBitOrPointerCast</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::BranchInst *  <a href="#4B01D12E96DA9608"><b>CreateBr</b></a>(llvm::BasicBlock * Dest)</li><li class="is-family-code">public llvm::CallInst *  <a href="#1EE2C5CB14541F12"><b>CreateCall</b></a>(llvm::FunctionCallee
 Callee, ArrayRef&lt;llvm::Value *&gt; Args, 
ArrayRef&lt;llvm::OperandBundleDef&gt; OpBundles, const llvm::Twine 
&amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#4DDAF6B80A179C9C"><b>CreateCall</b></a>(llvm::FunctionCallee
 Callee, ArrayRef&lt;llvm::Value *&gt; Args = None, const llvm::Twine 
&amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#0284BCE83612FE63"><b>CreateCall</b></a>(llvm::FunctionType
 * FTy, llvm::Value * Callee, ArrayRef&lt;llvm::Value *&gt; Args, 
ArrayRef&lt;llvm::OperandBundleDef&gt; OpBundles, const llvm::Twine 
&amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#7063D15FFABB3B87"><b>CreateCall</b></a>(llvm::FunctionType
 * FTy, llvm::Value * Callee, ArrayRef&lt;llvm::Value *&gt; Args = None,
 const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::CallBrInst *  <a href="#3CFE3E37F2469C93"><b>CreateCallBr</b></a>(llvm::FunctionType
 * Ty, llvm::Value * Callee, llvm::BasicBlock * DefaultDest, 
ArrayRef&lt;llvm::BasicBlock *&gt; IndirectDests, 
ArrayRef&lt;llvm::Value *&gt; Args = None, const llvm::Twine &amp; Name =
 "")</li><li class="is-family-code">public llvm::CallBrInst *  <a href="#7008DC3DE9329A22"><b>CreateCallBr</b></a>(llvm::FunctionType
 * Ty, llvm::Value * Callee, llvm::BasicBlock * DefaultDest, 
ArrayRef&lt;llvm::BasicBlock *&gt; IndirectDests, 
ArrayRef&lt;llvm::Value *&gt; Args, 
ArrayRef&lt;llvm::OperandBundleDef&gt; OpBundles, const llvm::Twine 
&amp; Name = "")</li><li class="is-family-code">public llvm::CallBrInst *  <a href="#32E7CA327A3208E9"><b>CreateCallBr</b></a>(llvm::FunctionCallee
 Callee, llvm::BasicBlock * DefaultDest, ArrayRef&lt;llvm::BasicBlock 
*&gt; IndirectDests, ArrayRef&lt;llvm::Value *&gt; Args = None, const 
llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallBrInst *  <a href="#A125335EAFDB7B90"><b>CreateCallBr</b></a>(llvm::FunctionCallee
 Callee, llvm::BasicBlock * DefaultDest, ArrayRef&lt;llvm::BasicBlock 
*&gt; IndirectDests, ArrayRef&lt;llvm::Value *&gt; Args, 
ArrayRef&lt;llvm::OperandBundleDef&gt; OpBundles, const llvm::Twine 
&amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#3D62A0C9D718C810"><b>CreateCast</b></a>(Instruction::CastOps Op, llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CatchPadInst *  <a href="#BF825B62DF6D41C8"><b>CreateCatchPad</b></a>(llvm::Value * ParentPad, ArrayRef&lt;llvm::Value *&gt; Args, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CatchReturnInst *  <a href="#C140323A70D26CDA"><b>CreateCatchRet</b></a>(llvm::CatchPadInst * CatchPad, llvm::BasicBlock * BB)</li><li class="is-family-code">public llvm::CatchSwitchInst *  <a href="#B3812C13E15D10B6"><b>CreateCatchSwitch</b></a>(llvm::Value * ParentPad, llvm::BasicBlock * UnwindBB, unsigned int NumHandlers, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CleanupPadInst *  <a href="#153FC94D4B6845DB"><b>CreateCleanupPad</b></a>(llvm::Value * ParentPad, ArrayRef&lt;llvm::Value *&gt; Args = None, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CleanupReturnInst *  <a href="#3D90B5AD0179385F"><b>CreateCleanupRet</b></a>(llvm::CleanupPadInst * CleanupPad, llvm::BasicBlock * UnwindBB = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#C87E27EC0D1A033C"><b>CreateCmp</b></a>(CmpInst::Predicate
 Pred, llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; 
Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::BranchInst *  <a href="#98C5A2C153E3F27C"><b>CreateCondBr</b></a>(llvm::Value
 * Cond, llvm::BasicBlock * True, llvm::BasicBlock * False, llvm::MDNode
 * BranchWeights = nullptr, llvm::MDNode * Unpredictable = nullptr)</li><li class="is-family-code">public llvm::BranchInst *  <a href="#F334046E5D322F48"><b>CreateCondBr</b></a>(llvm::Value * Cond, llvm::BasicBlock * True, llvm::BasicBlock * False, llvm::Instruction * MDSrc)</li><li class="is-family-code">public llvm::Value *  <a href="#5C7713DC72F46DBA"><b>CreateConstGEP1_32</b></a>(llvm::Type * Ty, llvm::Value * Ptr, unsigned int Idx0, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#D455EEAF0354DC37"><b>CreateConstGEP1_64</b></a>(llvm::Type * Ty, llvm::Value * Ptr, uint64_t Idx0, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#D694178978CDFBDA"><b>CreateConstGEP2_32</b></a>(llvm::Type * Ty, llvm::Value * Ptr, unsigned int Idx0, unsigned int Idx1, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#242C0238373A6B39"><b>CreateConstGEP2_64</b></a>(llvm::Type * Ty, llvm::Value * Ptr, uint64_t Idx0, uint64_t Idx1, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#D71C7603625265AE"><b>CreateConstInBoundsGEP1_32</b></a>(llvm::Type * Ty, llvm::Value * Ptr, unsigned int Idx0, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#7FDA7B504DD08358"><b>CreateConstInBoundsGEP1_64</b></a>(llvm::Type * Ty, llvm::Value * Ptr, uint64_t Idx0, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#E88AAEB3837F174F"><b>CreateConstInBoundsGEP2_32</b></a>(llvm::Type * Ty, llvm::Value * Ptr, unsigned int Idx0, unsigned int Idx1, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#48DBBA1826C3FE6F"><b>CreateConstInBoundsGEP2_64</b></a>(llvm::Type * Ty, llvm::Value * Ptr, uint64_t Idx0, uint64_t Idx1, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#36A70468BB1582E3"><b>CreateConstrainedFPBinOp</b></a>(Intrinsic::ID
 ID, llvm::Value * L, llvm::Value * R, llvm::Instruction * FMFSource = 
nullptr, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = 
nullptr, Optional&lt;llvm::RoundingMode&gt; Rounding = None, 
Optional&lt;fp::ExceptionBehavior&gt; Except = None)</li><li class="is-family-code">public llvm::CallInst *  <a href="#704E2FDF02BB7668"><b>CreateConstrainedFPCall</b></a>(llvm::Function
 * Callee, ArrayRef&lt;llvm::Value *&gt; Args, const llvm::Twine &amp; 
Name = "", Optional&lt;llvm::RoundingMode&gt; Rounding = None, 
Optional&lt;fp::ExceptionBehavior&gt; Except = None)</li><li class="is-family-code">public llvm::CallInst *  <a href="#A9EDA4C47E5230AE"><b>CreateConstrainedFPCast</b></a>(Intrinsic::ID
 ID, llvm::Value * V, llvm::Type * DestTy, llvm::Instruction * FMFSource
 = nullptr, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag =
 nullptr, Optional&lt;llvm::RoundingMode&gt; Rounding = None, 
Optional&lt;fp::ExceptionBehavior&gt; Except = None)</li><li class="is-family-code">public llvm::CallInst *  <a href="#9D96011EA7B9B0B7"><b>CreateConstrainedFPCmp</b></a>(Intrinsic::ID
 ID, CmpInst::Predicate P, llvm::Value * L, llvm::Value * R, const 
llvm::Twine &amp; Name = "", Optional&lt;fp::ExceptionBehavior&gt; 
Except = None)</li><li class="is-family-code">public llvm::CallInst *  <a href="#3753DCC5572C8DEC"><b>CreateElementUnorderedAtomicMemCpy</b></a>(llvm::Value
 * Dst, llvm::Align DstAlign, llvm::Value * Src, llvm::Align SrcAlign, 
llvm::Value * Size, uint32_t ElementSize, llvm::MDNode * TBAATag = 
nullptr, llvm::MDNode * TBAAStructTag = nullptr, llvm::MDNode * ScopeTag
 = nullptr, llvm::MDNode * NoAliasTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#D31FDB537BFFEC17"><b>CreateElementUnorderedAtomicMemMove</b></a>(llvm::Value
 * Dst, llvm::Align DstAlign, llvm::Value * Src, llvm::Align SrcAlign, 
llvm::Value * Size, uint32_t ElementSize, llvm::MDNode * TBAATag = 
nullptr, llvm::MDNode * TBAAStructTag = nullptr, llvm::MDNode * ScopeTag
 = nullptr, llvm::MDNode * NoAliasTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#E5FD11E48DCA730A"><b>CreateElementUnorderedAtomicMemSet</b></a>(llvm::Value
 * Ptr, llvm::Value * Val, uint64_t Size, llvm::Align Alignment, 
uint32_t ElementSize, llvm::MDNode * TBAATag = nullptr, llvm::MDNode * 
ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#363152B2CD628AF3"><b>CreateElementUnorderedAtomicMemSet</b></a>(llvm::Value
 * Ptr, llvm::Value * Val, llvm::Value * Size, llvm::Align Alignment, 
uint32_t ElementSize, llvm::MDNode * TBAATag = nullptr, llvm::MDNode * 
ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#9F8B951AF0C2C2BE"><b>CreateExactSDiv</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#19DD19877C8C8DE8"><b>CreateExactUDiv</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#200BAA60DA89F335"><b>CreateExtractElement</b></a>(llvm::Value * Vec, uint64_t Idx, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#06723D155903AC80"><b>CreateExtractElement</b></a>(llvm::Value * Vec, llvm::Value * Idx, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#6B656B3698653A0B"><b>CreateExtractInteger</b></a>(const
 llvm::DataLayout &amp; DL, llvm::Value * From, llvm::IntegerType * 
ExtractedTy, uint64_t Offset, const llvm::Twine &amp; Name)</li><li class="is-family-code">public llvm::Value *  <a href="#0CAA626D9C5055A8"><b>CreateExtractValue</b></a>(llvm::Value * Agg, ArrayRef&lt;unsigned int&gt; Idxs, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#5EC309F95E11F8BE"><b>CreateExtractVector</b></a>(llvm::Type * DstType, llvm::Value * SrcVec, llvm::Value * Idx, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#C31552839C8F36D7"><b>CreateFAdd</b></a>(llvm::Value * L, llvm::Value * R, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMD = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#4344C28B008B8A0F"><b>CreateFAddFMF</b></a>(llvm::Value * L, llvm::Value * R, llvm::Instruction * FMFSource, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#431BC1091D90F3DC"><b>CreateFAddReduce</b></a>(llvm::Value * Acc, llvm::Value * Src)</li><li class="is-family-code">public llvm::Value *  <a href="#92373D427FF82971"><b>CreateFCmp</b></a>(CmpInst::Predicate
 P, llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name =
 "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">private llvm::Value *  <a href="#9A1F1F8A8CDFA437"><b>CreateFCmpHelper</b></a>(CmpInst::Predicate
 P, llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name, 
llvm::MDNode * FPMathTag, bool IsSignaling)</li><li class="is-family-code">public llvm::Value *  <a href="#8A1BF730533A5ED6"><b>CreateFCmpOEQ</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#543482D662A048E0"><b>CreateFCmpOGE</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#4951FF4970BEB402"><b>CreateFCmpOGT</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#BB8E6FDBF575AA46"><b>CreateFCmpOLE</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#D3A2DD047A1C9B72"><b>CreateFCmpOLT</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#F47A0E3885343703"><b>CreateFCmpONE</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#99EFD849152C8055"><b>CreateFCmpORD</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#8D76D9C28BB35529"><b>CreateFCmpS</b></a>(CmpInst::Predicate
 P, llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name =
 "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#AAAB16137C3A4728"><b>CreateFCmpUEQ</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#C1FA661F878460A8"><b>CreateFCmpUGE</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#42A3478D3FCD79FE"><b>CreateFCmpUGT</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#75CF42CAABFF13EA"><b>CreateFCmpULE</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#51663044C580774E"><b>CreateFCmpULT</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#CCF6BD679654FE71"><b>CreateFCmpUNE</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#64E57EFE9216C93E"><b>CreateFCmpUNO</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#1A7B4E74828DC329"><b>CreateFDiv</b></a>(llvm::Value * L, llvm::Value * R, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMD = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#034009111830BDDC"><b>CreateFDivFMF</b></a>(llvm::Value * L, llvm::Value * R, llvm::Instruction * FMFSource, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#104D35B33B907705"><b>CreateFMul</b></a>(llvm::Value * L, llvm::Value * R, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMD = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#B76C381EDD1D9E7D"><b>CreateFMulFMF</b></a>(llvm::Value * L, llvm::Value * R, llvm::Instruction * FMFSource, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#F8CC0220701E32D0"><b>CreateFMulReduce</b></a>(llvm::Value * Acc, llvm::Value * Src)</li><li class="is-family-code">public llvm::Value *  <a href="#DE016ADC2E6718DC"><b>CreateFNeg</b></a>(llvm::Value * V, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#2F2567CE9012B032"><b>CreateFNegFMF</b></a>(llvm::Value * V, llvm::Instruction * FMFSource, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#89C02823BC3F7D59"><b>CreateFPCast</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#931EA78A0FBDD885"><b>CreateFPExt</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#5799A88A572A4B41"><b>CreateFPMaxReduce</b></a>(llvm::Value * Src)</li><li class="is-family-code">public llvm::CallInst *  <a href="#DD5505255EE1A4D8"><b>CreateFPMinReduce</b></a>(llvm::Value * Src)</li><li class="is-family-code">public llvm::Value *  <a href="#8465063A16F3C775"><b>CreateFPToSI</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#AF8F5799B5AD5E21"><b>CreateFPToUI</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#57958F78F1399BE7"><b>CreateFPTrunc</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#0ED70C8AC26312F9"><b>CreateFRem</b></a>(llvm::Value * L, llvm::Value * R, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMD = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#866BD1D284350091"><b>CreateFRemFMF</b></a>(llvm::Value * L, llvm::Value * R, llvm::Instruction * FMFSource, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#2FC1730E384A7FE8"><b>CreateFSub</b></a>(llvm::Value * L, llvm::Value * R, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMD = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#83688C9995C858EE"><b>CreateFSubFMF</b></a>(llvm::Value * L, llvm::Value * R, llvm::Instruction * FMFSource, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::FenceInst *  <a href="#16EBF906E0A19D71"><b>CreateFence</b></a>(llvm::AtomicOrdering Ordering, SyncScope::ID SSID = SyncScope::System, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#48D1B6342E6036C9"><b>CreateFreeze</b></a>(llvm::Value * V, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#5257B2C3F19716AC"><b>CreateGCGetPointerBase</b></a>(llvm::Value * DerivedPtr, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#17DA1E8AEBE05160"><b>CreateGCGetPointerOffset</b></a>(llvm::Value * DerivedPtr, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#7A320732B735E1B8"><b>CreateGCRelocate</b></a>(llvm::Instruction * Statepoint, int BaseOffset, int DerivedOffset, llvm::Type * ResultType, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#9A64D27A930C3A2B"><b>CreateGCResult</b></a>(llvm::Instruction * Statepoint, llvm::Type * ResultType, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#B368A0F4C913DA61"><b>CreateGCStatepointCall</b></a>(uint64_t
 ID, uint32_t NumPatchBytes, llvm::FunctionCallee ActualCallee, 
ArrayRef&lt;llvm::Value *&gt; CallArgs, 
Optional&lt;ArrayRef&lt;llvm::Value *&gt;&gt; DeoptArgs, 
ArrayRef&lt;llvm::Value *&gt; GCArgs, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#DA41E6CAE5F17CF7"><b>CreateGCStatepointCall</b></a>(uint64_t
 ID, uint32_t NumPatchBytes, llvm::FunctionCallee ActualCallee, uint32_t
 Flags, ArrayRef&lt;llvm::Value *&gt; CallArgs, 
Optional&lt;ArrayRef&lt;llvm::Use&gt;&gt; TransitionArgs, 
Optional&lt;ArrayRef&lt;llvm::Use&gt;&gt; DeoptArgs, 
ArrayRef&lt;llvm::Value *&gt; GCArgs, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#BB6A8AB63CE69A56"><b>CreateGCStatepointCall</b></a>(uint64_t
 ID, uint32_t NumPatchBytes, llvm::FunctionCallee ActualCallee, 
ArrayRef&lt;llvm::Use&gt; CallArgs, Optional&lt;ArrayRef&lt;llvm::Value 
*&gt;&gt; DeoptArgs, ArrayRef&lt;llvm::Value *&gt; GCArgs, const 
llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::InvokeInst *  <a href="#E32FC0870CC2D6CD"><b>CreateGCStatepointInvoke</b></a>(uint64_t
 ID, uint32_t NumPatchBytes, llvm::FunctionCallee ActualInvokee, 
llvm::BasicBlock * NormalDest, llvm::BasicBlock * UnwindDest, 
ArrayRef&lt;llvm::Value *&gt; InvokeArgs, 
Optional&lt;ArrayRef&lt;llvm::Value *&gt;&gt; DeoptArgs, 
ArrayRef&lt;llvm::Value *&gt; GCArgs, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::InvokeInst *  <a href="#E23934EE1750B93D"><b>CreateGCStatepointInvoke</b></a>(uint64_t
 ID, uint32_t NumPatchBytes, llvm::FunctionCallee ActualInvokee, 
llvm::BasicBlock * NormalDest, llvm::BasicBlock * UnwindDest, 
ArrayRef&lt;llvm::Use&gt; InvokeArgs, 
Optional&lt;ArrayRef&lt;llvm::Value *&gt;&gt; DeoptArgs, 
ArrayRef&lt;llvm::Value *&gt; GCArgs, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::InvokeInst *  <a href="#F76664753147539F"><b>CreateGCStatepointInvoke</b></a>(uint64_t
 ID, uint32_t NumPatchBytes, llvm::FunctionCallee ActualInvokee, 
llvm::BasicBlock * NormalDest, llvm::BasicBlock * UnwindDest, uint32_t 
Flags, ArrayRef&lt;llvm::Value *&gt; InvokeArgs, 
Optional&lt;ArrayRef&lt;llvm::Use&gt;&gt; TransitionArgs, 
Optional&lt;ArrayRef&lt;llvm::Use&gt;&gt; DeoptArgs, 
ArrayRef&lt;llvm::Value *&gt; GCArgs, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#BFA8D09E3FB76DA1"><b>CreateGEP</b></a>(llvm::Type
 * Ty, llvm::Value * Ptr, ArrayRef&lt;llvm::Value *&gt; IdxList, const 
llvm::Twine &amp; Name = "", bool IsInBounds = false)</li><li class="is-family-code">public llvm::GlobalVariable *  <a href="#D9389D831CE65E5D"><b>CreateGlobalString</b></a>(llvm::StringRef Str, const llvm::Twine &amp; Name = "", unsigned int AddressSpace = 0, llvm::Module * M = nullptr)</li><li class="is-family-code">public llvm::Constant *  <a href="#3295E0BD410846E9"><b>CreateGlobalStringPtr</b></a>(llvm::StringRef Str, const llvm::Twine &amp; Name = "", unsigned int AddressSpace = 0, llvm::Module * M = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#FC916D85F96E8E88"><b>CreateICmp</b></a>(CmpInst::Predicate P, llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#8271A453CCC676AD"><b>CreateICmpEQ</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#3FF4EE15AC0D18C7"><b>CreateICmpNE</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#10F8C88AC2C67FA3"><b>CreateICmpSGE</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#D667E45FF586B1B5"><b>CreateICmpSGT</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#C6FE59F10585CC63"><b>CreateICmpSLE</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#6E527737E7CBFA8E"><b>CreateICmpSLT</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#9B3CD7820D819C6E"><b>CreateICmpUGE</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#2B9B54DAC89F3D69"><b>CreateICmpUGT</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#5BA88F185C6731F7"><b>CreateICmpULE</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#8E5EA35B96304FA3"><b>CreateICmpULT</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#3DD3D449AAC5202F"><b>CreateInBoundsGEP</b></a>(llvm::Type * Ty, llvm::Value * Ptr, ArrayRef&lt;llvm::Value *&gt; IdxList, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::IndirectBrInst *  <a href="#BE421ECD74BD331A"><b>CreateIndirectBr</b></a>(llvm::Value * Addr, unsigned int NumDests = 10)</li><li class="is-family-code">public llvm::Value *  <a href="#026579C6634D756D"><b>CreateInsertElement</b></a>(llvm::Type * VecTy, llvm::Value * NewElt, llvm::Value * Idx, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#B4E585AACAD22E54"><b>CreateInsertElement</b></a>(llvm::Type * VecTy, llvm::Value * NewElt, uint64_t Idx, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#B78BBA5ADF71CD70"><b>CreateInsertElement</b></a>(llvm::Value * Vec, llvm::Value * NewElt, llvm::Value * Idx, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#A73564C38A9D1EEF"><b>CreateInsertElement</b></a>(llvm::Value * Vec, llvm::Value * NewElt, uint64_t Idx, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">private llvm::BinaryOperator *  <a href="#EA65B601682A32BA"><b>CreateInsertNUWNSWBinOp</b></a>(BinaryOperator::BinaryOps Opc, llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name, bool HasNUW, bool HasNSW)</li><li class="is-family-code">public llvm::Value *  <a href="#58F6731B40AEB30C"><b>CreateInsertValue</b></a>(llvm::Value * Agg, llvm::Value * Val, ArrayRef&lt;unsigned int&gt; Idxs, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#A91F843BEC87B320"><b>CreateInsertVector</b></a>(llvm::Type * DstType, llvm::Value * SrcVec, llvm::Value * SubVec, llvm::Value * Idx, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#6A483C4F4F7EE547"><b>CreateIntCast</b></a>(llvm::Value *, llvm::Type *, const char *)</li><li class="is-family-code">public llvm::Value *  <a href="#D4341186D76745D3"><b>CreateIntCast</b></a>(llvm::Value * V, llvm::Type * DestTy, bool isSigned, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#A3684E13B0220E6D"><b>CreateIntMaxReduce</b></a>(llvm::Value * Src, bool IsSigned = false)</li><li class="is-family-code">public llvm::CallInst *  <a href="#6E89EC3DAC67DC42"><b>CreateIntMinReduce</b></a>(llvm::Value * Src, bool IsSigned = false)</li><li class="is-family-code">public llvm::Value *  <a href="#086FDB993DFE15DB"><b>CreateIntToPtr</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#509CE6F614C5C39F"><b>CreateIntrinsic</b></a>(Intrinsic::ID
 ID, ArrayRef&lt;llvm::Type *&gt; Types, ArrayRef&lt;llvm::Value *&gt; 
Args, llvm::Instruction * FMFSource = nullptr, const llvm::Twine &amp; 
Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#1301575AFB8D98D8"><b>CreateInvariantStart</b></a>(llvm::Value * Ptr, llvm::ConstantInt * Size = nullptr)</li><li class="is-family-code">public llvm::InvokeInst *  <a href="#03076AAA45B2B164"><b>CreateInvoke</b></a>(llvm::FunctionCallee
 Callee, llvm::BasicBlock * NormalDest, llvm::BasicBlock * UnwindDest, 
ArrayRef&lt;llvm::Value *&gt; Args = None, const llvm::Twine &amp; Name =
 "")</li><li class="is-family-code">public llvm::InvokeInst *  <a href="#BEE81C1204AB3C99"><b>CreateInvoke</b></a>(llvm::FunctionType
 * Ty, llvm::Value * Callee, llvm::BasicBlock * NormalDest, 
llvm::BasicBlock * UnwindDest, ArrayRef&lt;llvm::Value *&gt; Args, 
ArrayRef&lt;llvm::OperandBundleDef&gt; OpBundles, const llvm::Twine 
&amp; Name = "")</li><li class="is-family-code">public llvm::InvokeInst *  <a href="#7E7346E7EC9CC6A3"><b>CreateInvoke</b></a>(llvm::FunctionCallee
 Callee, llvm::BasicBlock * NormalDest, llvm::BasicBlock * UnwindDest, 
ArrayRef&lt;llvm::Value *&gt; Args, 
ArrayRef&lt;llvm::OperandBundleDef&gt; OpBundles, const llvm::Twine 
&amp; Name = "")</li><li class="is-family-code">public llvm::InvokeInst *  <a href="#5D6879DD4309D1A0"><b>CreateInvoke</b></a>(llvm::FunctionType
 * Ty, llvm::Value * Callee, llvm::BasicBlock * NormalDest, 
llvm::BasicBlock * UnwindDest, ArrayRef&lt;llvm::Value *&gt; Args = 
None, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#87A15419BD63E5E4"><b>CreateIsNeg</b></a>(llvm::Value * Arg, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#BF72FFBDDD93029A"><b>CreateIsNotNeg</b></a>(llvm::Value * Arg, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#8D75361800B066F3"><b>CreateIsNotNull</b></a>(llvm::Value * Arg, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#4A0EBEB9114A1CC9"><b>CreateIsNull</b></a>(llvm::Value * Arg, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#A73D211F670EE57A"><b>CreateLShr</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", bool isExact = false)</li><li class="is-family-code">public llvm::Value *  <a href="#32E915DAA9E3C4D3"><b>CreateLShr</b></a>(llvm::Value * LHS, const llvm::APInt &amp; RHS, const llvm::Twine &amp; Name = "", bool isExact = false)</li><li class="is-family-code">public llvm::Value *  <a href="#1D3043F2BF557502"><b>CreateLShr</b></a>(llvm::Value * LHS, uint64_t RHS, const llvm::Twine &amp; Name = "", bool isExact = false)</li><li class="is-family-code">public llvm::LandingPadInst *  <a href="#F0517B592D9F98EF"><b>CreateLandingPad</b></a>(llvm::Type * Ty, unsigned int NumClauses, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#C0562CD0DFCA8413"><b>CreateLaunderInvariantGroup</b></a>(llvm::Value * Ptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#8A0550069C6BB6BE"><b>CreateLifetimeEnd</b></a>(llvm::Value * Ptr, llvm::ConstantInt * Size = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#BFE49638AA09FD8B"><b>CreateLifetimeStart</b></a>(llvm::Value * Ptr, llvm::ConstantInt * Size = nullptr)</li><li class="is-family-code">public llvm::LoadInst *  <a href="#3493287CE97DBBDC"><b>CreateLoad</b></a>(llvm::Type * Ty, llvm::Value * Ptr, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::LoadInst *  <a href="#95890BB3F7499B3E"><b>CreateLoad</b></a>(llvm::Type * Ty, llvm::Value * Ptr, bool isVolatile, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::LoadInst *  <a href="#980ECE9A4C0D779E"><b>CreateLoad</b></a>(llvm::Type * Ty, llvm::Value * Ptr, const char * Name)</li><li class="is-family-code">public llvm::Value *  <a href="#4D362D1760A651B5"><b>CreateLogicalAnd</b></a>(llvm::Value * Cond1, llvm::Value * Cond2, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#EC78B87D4113AF1B"><b>CreateLogicalOr</b></a>(ArrayRef&lt;llvm::Value *&gt; Ops)</li><li class="is-family-code">public llvm::Value *  <a href="#7FDFDE311A3A83FD"><b>CreateLogicalOr</b></a>(llvm::Value * Cond1, llvm::Value * Cond2, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#59CD6AB4738A692E"><b>CreateMaskedGather</b></a>(llvm::Type
 * Ty, llvm::Value * Ptrs, llvm::Align Alignment, llvm::Value * Mask = 
nullptr, llvm::Value * PassThru = nullptr, const llvm::Twine &amp; Name =
 "")</li><li class="is-family-code">private llvm::CallInst *  <a href="#5CA05692072FB065"><b>CreateMaskedIntrinsic</b></a>(Intrinsic::ID
 Id, ArrayRef&lt;llvm::Value *&gt; Ops, ArrayRef&lt;llvm::Type *&gt; 
OverloadedTypes, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#B7644CA93CAB7C7C"><b>CreateMaskedLoad</b></a>(llvm::Type
 * Ty, llvm::Value * Ptr, llvm::Align Alignment, llvm::Value * Mask, 
llvm::Value * PassThru = nullptr, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#D0E3D3293B15A53A"><b>CreateMaskedScatter</b></a>(llvm::Value * Val, llvm::Value * Ptrs, llvm::Align Alignment, llvm::Value * Mask = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#7D2C004CAB85B5E3"><b>CreateMaskedStore</b></a>(llvm::Value * Val, llvm::Value * Ptr, llvm::Align Alignment, llvm::Value * Mask)</li><li class="is-family-code">public llvm::CallInst *  <a href="#01177C48F74462E9"><b>CreateMaxNum</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#31C97DC07A949E67"><b>CreateMaximum</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#7EE5B24A37DD3C7B"><b>CreateMemCpy</b></a>(llvm::Value
 * Dst, llvm::MaybeAlign DstAlign, llvm::Value * Src, llvm::MaybeAlign 
SrcAlign, llvm::Value * Size, bool isVolatile = false, llvm::MDNode * 
TBAATag = nullptr, llvm::MDNode * TBAAStructTag = nullptr, llvm::MDNode *
 ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#0902C277C535367C"><b>CreateMemCpy</b></a>(llvm::Value
 * Dst, llvm::MaybeAlign DstAlign, llvm::Value * Src, llvm::MaybeAlign 
SrcAlign, uint64_t Size, bool isVolatile = false, llvm::MDNode * TBAATag
 = nullptr, llvm::MDNode * TBAAStructTag = nullptr, llvm::MDNode * 
ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#1E4D4C7D6DA5646F"><b>CreateMemCpyInline</b></a>(llvm::Value
 * Dst, llvm::MaybeAlign DstAlign, llvm::Value * Src, llvm::MaybeAlign 
SrcAlign, llvm::Value * Size, bool IsVolatile = false, llvm::MDNode * 
TBAATag = nullptr, llvm::MDNode * TBAAStructTag = nullptr, llvm::MDNode *
 ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#8B1FFF9B8A44749A"><b>CreateMemMove</b></a>(llvm::Value
 * Dst, llvm::MaybeAlign DstAlign, llvm::Value * Src, llvm::MaybeAlign 
SrcAlign, llvm::Value * Size, bool isVolatile = false, llvm::MDNode * 
TBAATag = nullptr, llvm::MDNode * ScopeTag = nullptr, llvm::MDNode * 
NoAliasTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#0A8C51A8EB6FDDE8"><b>CreateMemMove</b></a>(llvm::Value
 * Dst, llvm::MaybeAlign DstAlign, llvm::Value * Src, llvm::MaybeAlign 
SrcAlign, uint64_t Size, bool isVolatile = false, llvm::MDNode * TBAATag
 = nullptr, llvm::MDNode * ScopeTag = nullptr, llvm::MDNode * NoAliasTag
 = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#8E28E5AB86B3872E"><b>CreateMemSet</b></a>(llvm::Value
 * Ptr, llvm::Value * Val, uint64_t Size, llvm::MaybeAlign Align, bool 
isVolatile = false, llvm::MDNode * TBAATag = nullptr, llvm::MDNode * 
ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#B50FF94C7A789837"><b>CreateMemSet</b></a>(llvm::Value
 * Ptr, llvm::Value * Val, llvm::Value * Size, llvm::MaybeAlign Align, 
bool isVolatile = false, llvm::MDNode * TBAATag = nullptr, llvm::MDNode *
 ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#17247D1FA879A83A"><b>CreateMemSetInline</b></a>(llvm::Value
 * Dst, llvm::MaybeAlign DstAlign, llvm::Value * Val, llvm::Value * 
Size, bool IsVolatile = false, llvm::MDNode * TBAATag = nullptr, 
llvm::MDNode * ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#F1D3FA5EE142A52F"><b>CreateMemTransferInst</b></a>(Intrinsic::ID
 IntrID, llvm::Value * Dst, llvm::MaybeAlign DstAlign, llvm::Value * 
Src, llvm::MaybeAlign SrcAlign, llvm::Value * Size, bool isVolatile = 
false, llvm::MDNode * TBAATag = nullptr, llvm::MDNode * TBAAStructTag = 
nullptr, llvm::MDNode * ScopeTag = nullptr, llvm::MDNode * NoAliasTag = 
nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#43C77A801709D1AB"><b>CreateMinNum</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#6050237CF760FF0D"><b>CreateMinimum</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#973A0EDAE21A1091"><b>CreateMul</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", bool HasNUW = false, bool HasNSW = false)</li><li class="is-family-code">public llvm::CallInst *  <a href="#D6D92985FEBDDDC1"><b>CreateMulReduce</b></a>(llvm::Value * Src)</li><li class="is-family-code">public llvm::Value *  <a href="#74845EAF21096997"><b>CreateNAryOp</b></a>(unsigned int Opc, ArrayRef&lt;llvm::Value *&gt; Ops, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#42249D1476752D39"><b>CreateNSWAdd</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#0D84A219DC5F7E73"><b>CreateNSWMul</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#AF49A9AE872A8988"><b>CreateNSWNeg</b></a>(llvm::Value * V, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#4D91A593A7DFDF1A"><b>CreateNSWSub</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#F0C94416E7908B59"><b>CreateNUWAdd</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#86E1254B67AAAEC5"><b>CreateNUWMul</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#1807A49C436A761F"><b>CreateNUWNeg</b></a>(llvm::Value * V, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#267811E71E81825D"><b>CreateNUWSub</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#0F250127CD8AC6DA"><b>CreateNeg</b></a>(llvm::Value * V, const llvm::Twine &amp; Name = "", bool HasNUW = false, bool HasNSW = false)</li><li class="is-family-code">public llvm::Instruction *  <a href="#14313317C51952F8"><b>CreateNoAliasScopeDeclaration</b></a>(llvm::MDNode * ScopeTag)</li><li class="is-family-code">public llvm::Instruction *  <a href="#BFB5E762715C7DCE"><b>CreateNoAliasScopeDeclaration</b></a>(llvm::Value * Scope)</li><li class="is-family-code">public llvm::Value *  <a href="#9A02C31D85B26F12"><b>CreateNot</b></a>(llvm::Value * V, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#462CE13BAE129DC7"><b>CreateOr</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#D5DA2247FFB9C8A4"><b>CreateOr</b></a>(llvm::Value * LHS, const llvm::APInt &amp; RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#08F86857A072EC02"><b>CreateOr</b></a>(ArrayRef&lt;llvm::Value *&gt; Ops)</li><li class="is-family-code">public llvm::Value *  <a href="#F6EB20CDBCE7DB5A"><b>CreateOr</b></a>(llvm::Value * LHS, uint64_t RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#ED57BDFF1BB3A36D"><b>CreateOrReduce</b></a>(llvm::Value * Src)</li><li class="is-family-code">public llvm::PHINode *  <a href="#5C93EAE246E76072"><b>CreatePHI</b></a>(llvm::Type * Ty, unsigned int NumReservedValues, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#D75866098E8F28D6"><b>CreatePointerBitCastOrAddrSpaceCast</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#C84EF4C90567C6F9"><b>CreatePointerCast</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#A7811AAD742AD4BB"><b>CreatePreserveArrayAccessIndex</b></a>(llvm::Type * ElTy, llvm::Value * Base, unsigned int Dimension, unsigned int LastIndex, llvm::MDNode * DbgInfo)</li><li class="is-family-code">public llvm::Value *  <a href="#23642E9B3A114B54"><b>CreatePreserveStructAccessIndex</b></a>(llvm::Type * ElTy, llvm::Value * Base, unsigned int Index, unsigned int FieldIndex, llvm::MDNode * DbgInfo)</li><li class="is-family-code">public llvm::Value *  <a href="#93C69A846AA178EC"><b>CreatePreserveUnionAccessIndex</b></a>(llvm::Value * Base, unsigned int FieldIndex, llvm::MDNode * DbgInfo)</li><li class="is-family-code">public llvm::Value *  <a href="#D840B592054D3CBB"><b>CreatePtrDiff</b></a>(llvm::Type * ElemTy, llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#D6D52DC1D9F5249D"><b>CreatePtrToInt</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::ResumeInst *  <a href="#7F2B1BD45ED2D223"><b>CreateResume</b></a>(llvm::Value * Exn)</li><li class="is-family-code">public llvm::ReturnInst *  <a href="#926ADBB557B907B4"><b>CreateRet</b></a>(llvm::Value * V)</li><li class="is-family-code">public llvm::ReturnInst *  <a href="#FCF5D962081BBD0C"><b>CreateRetVoid</b></a>()</li><li class="is-family-code">public llvm::Value *  <a href="#5BD5C3A766253115"><b>CreateSDiv</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", bool isExact = false)</li><li class="is-family-code">public llvm::Value *  <a href="#07F38AB7A724F65F"><b>CreateSExt</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#A9B3BCFD50B2E7E6"><b>CreateSExtOrBitCast</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#414F839FCEF45156"><b>CreateSExtOrTrunc</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#5CABBDBD2180DC9E"><b>CreateSIToFP</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#2D6DD93A872F7460"><b>CreateSRem</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#92FB100E5F2843D6"><b>CreateSelect</b></a>(llvm::Value
 * C, llvm::Value * True, llvm::Value * False, const llvm::Twine &amp; 
Name = "", llvm::Instruction * MDFrom = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#0C67785E79386233"><b>CreateShl</b></a>(llvm::Value * LHS, uint64_t RHS, const llvm::Twine &amp; Name = "", bool HasNUW = false, bool HasNSW = false)</li><li class="is-family-code">public llvm::Value *  <a href="#5EEFFB2B6D961BB4"><b>CreateShl</b></a>(llvm::Value * LHS, const llvm::APInt &amp; RHS, const llvm::Twine &amp; Name = "", bool HasNUW = false, bool HasNSW = false)</li><li class="is-family-code">public llvm::Value *  <a href="#4CC52FC2C03BD581"><b>CreateShl</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", bool HasNUW = false, bool HasNSW = false)</li><li class="is-family-code">public llvm::Value *  <a href="#004CD4D1719740C6"><b>CreateShuffleVector</b></a>(llvm::Value * V1, llvm::Value * V2, llvm::Value * Mask, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#E44BB67A81BBB0F6"><b>CreateShuffleVector</b></a>(llvm::Value * V, ArrayRef&lt;int&gt; Mask, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#53CB18A1A672B166"><b>CreateShuffleVector</b></a>(llvm::Value * V1, llvm::Value * V2, ArrayRef&lt;int&gt; Mask, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#CCF2E0139648DF6C"><b>CreateStepVector</b></a>(llvm::Type * DstType, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::StoreInst *  <a href="#82A7A41D237C3B5E"><b>CreateStore</b></a>(llvm::Value * Val, llvm::Value * Ptr, bool isVolatile = false)</li><li class="is-family-code">public llvm::Value *  <a href="#3CA341300A4D283D"><b>CreateStripInvariantGroup</b></a>(llvm::Value * Ptr)</li><li class="is-family-code">public llvm::Value *  <a href="#82F967A2A4B62548"><b>CreateStructGEP</b></a>(llvm::Type * Ty, llvm::Value * Ptr, unsigned int Idx, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#20306F7D6E90EA31"><b>CreateSub</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", bool HasNUW = false, bool HasNSW = false)</li><li class="is-family-code">public llvm::SwitchInst *  <a href="#F035014CE9C1E5C8"><b>CreateSwitch</b></a>(llvm::Value
 * V, llvm::BasicBlock * Dest, unsigned int NumCases = 10, llvm::MDNode *
 BranchWeights = nullptr, llvm::MDNode * Unpredictable = nullptr)</li><li class="is-family-code">public llvm::Value *  <a href="#2EAFA583E19E3993"><b>CreateTrunc</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#E181454DE0EA71FD"><b>CreateTruncOrBitCast</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#3F3ABEA89D9A9BE3"><b>CreateUDiv</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "", bool isExact = false)</li><li class="is-family-code">public llvm::Value *  <a href="#0B0A3545BBAB1BC1"><b>CreateUIToFP</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#24E04A3700F4056D"><b>CreateURem</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#052CD5BA021170AA"><b>CreateUnOp</b></a>(Instruction::UnaryOps Opc, llvm::Value * V, const llvm::Twine &amp; Name = "", llvm::MDNode * FPMathTag = nullptr)</li><li class="is-family-code">public llvm::CallInst *  <a href="#4AD34507FF2D7FFD"><b>CreateUnaryIntrinsic</b></a>(Intrinsic::ID ID, llvm::Value * V, llvm::Instruction * FMFSource = nullptr, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::UnreachableInst *  <a href="#00CDF91FA60C7809"><b>CreateUnreachable</b></a>()</li><li class="is-family-code">public llvm::VAArgInst *  <a href="#C3F0167A489C7AC1"><b>CreateVAArg</b></a>(llvm::Value * List, llvm::Type * Ty, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#F46451D7FFC6D6BE"><b>CreateVScale</b></a>(llvm::Constant * Scaling, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#030C365DDA947105"><b>CreateVectorReverse</b></a>(llvm::Value * V, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#24EF65D20A997020"><b>CreateVectorSplat</b></a>(llvm::ElementCount EC, llvm::Value * V, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#1504CCFC0CD896D8"><b>CreateVectorSplat</b></a>(unsigned int NumElts, llvm::Value * V, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#80E810FC603298CB"><b>CreateVectorSplice</b></a>(llvm::Value * V1, llvm::Value * V2, int64_t Imm, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#B33F1BD91C6F0B20"><b>CreateXor</b></a>(llvm::Value * LHS, const llvm::APInt &amp; RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#77EE167F3FA7A26E"><b>CreateXor</b></a>(llvm::Value * LHS, uint64_t RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#0B7655902564EB95"><b>CreateXor</b></a>(llvm::Value * LHS, llvm::Value * RHS, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::CallInst *  <a href="#D75EAB020D47306A"><b>CreateXorReduce</b></a>(llvm::Value * Src)</li><li class="is-family-code">public llvm::Value *  <a href="#99321A613DA28017"><b>CreateZExt</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#D60B60A1C8126747"><b>CreateZExtOrBitCast</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::Value *  <a href="#E0651DECEF48105A"><b>CreateZExtOrTrunc</b></a>(llvm::Value * V, llvm::Type * DestTy, const llvm::Twine &amp; Name = "")</li><li class="is-family-code">public llvm::BasicBlock *  <a href="#725D1346BA95E1E5"><b>GetInsertBlock</b></a>() const</li><li class="is-family-code">public BasicBlock::iterator  <a href="#6DF0E7408D0441A8"><b>GetInsertPoint</b></a>() const</li><li class="is-family-code">public  <a href="#E39514368069D39D"><b>IRBuilderBase</b></a>(llvm::LLVMContext
 &amp; context, const llvm::IRBuilderFolder &amp; Folder, const 
llvm::IRBuilderDefaultInserter &amp; Inserter, llvm::MDNode * FPMathTag,
 ArrayRef&lt;llvm::OperandBundleDef&gt; OpBundles)</li><li class="is-family-code">public template &lt;typename InstTy&gt;InstTy *  <a href="#7B1288A37BBE5C37"><b>Insert</b></a>(InstTy * I, const llvm::Twine &amp; Name = "") const</li><li class="is-family-code">public llvm::Constant *  <a href="#C2A36C19D1CF4598"><b>Insert</b></a>(llvm::Constant * C, const llvm::Twine &amp; = "") const</li><li class="is-family-code">public llvm::Value *  <a href="#04A916F2D17F47D7"><b>Insert</b></a>(llvm::Value * V, const llvm::Twine &amp; Name = "") const</li><li class="is-family-code">public void  <a href="#720FFE6561B1C464"><b>SetCurrentDebugLocation</b></a>(llvm::DebugLoc L)</li><li class="is-family-code">public void  <a href="#AA68C3B2DDCE5856"><b>SetInsertPoint</b></a>(llvm::BasicBlock * TheBB)</li><li class="is-family-code">public void  <a href="#A45576B4E7904AC5"><b>SetInsertPoint</b></a>(llvm::Instruction * I)</li><li class="is-family-code">public void  <a href="#04C9A8E7B632120C"><b>SetInsertPoint</b></a>(llvm::BasicBlock * TheBB, BasicBlock::iterator IP)</li><li class="is-family-code">public void  <a href="#5F11F760F906E2C6"><b>SetInstDebugLocation</b></a>(llvm::Instruction * I) const</li><li class="is-family-code">private template &lt;typename InstTy&gt;InstTy *  <a href="#AC3AEDC305D12DF9"><b>addBranchMetadata</b></a>(InstTy * I, llvm::MDNode * Weights, llvm::MDNode * Unpredictable)</li><li class="is-family-code">public void  <a href="#6CE0DAE2765C811E"><b>clearFastMathFlags</b></a>()</li><li class="is-family-code">public llvm::Type *  <a href="#03963CDCC3ACE029"><b>getBFloatTy</b></a>()</li><li class="is-family-code">private llvm::Value *  <a href="#B5681AAD257C156B"><b>getCastedInt8PtrValue</b></a>(llvm::Value * Ptr)</li><li class="is-family-code">private llvm::Value *  <a href="#3D8EAA4955FA29CE"><b>getConstrainedFPExcept</b></a>(Optional&lt;fp::ExceptionBehavior&gt; Except)</li><li class="is-family-code">private llvm::Value *  <a href="#6F0347DB4E8E1469"><b>getConstrainedFPPredicate</b></a>(CmpInst::Predicate Predicate)</li><li class="is-family-code">private llvm::Value *  <a href="#22DC2FA5AD24578B"><b>getConstrainedFPRounding</b></a>(Optional&lt;llvm::RoundingMode&gt; Rounding)</li><li class="is-family-code">public llvm::LLVMContext &amp;  <a href="#B9F1EEBA7E4DCA86"><b>getContext</b></a>() const</li><li class="is-family-code">public llvm::DebugLoc  <a href="#DDF9C8FEC459C527"><b>getCurrentDebugLocation</b></a>() const</li><li class="is-family-code">public llvm::Type *  <a href="#55A2246E8788497C"><b>getCurrentFunctionReturnType</b></a>() const</li><li class="is-family-code">public fp::ExceptionBehavior  <a href="#78352E0155705AB6"><b>getDefaultConstrainedExcept</b></a>()</li><li class="is-family-code">public llvm::RoundingMode  <a href="#476D6B2C70BA25FC"><b>getDefaultConstrainedRounding</b></a>()</li><li class="is-family-code">public llvm::MDNode *  <a href="#39F7E1688E9E34C3"><b>getDefaultFPMathTag</b></a>() const</li><li class="is-family-code">public llvm::Type *  <a href="#D1FCBDA248FCA572"><b>getDoubleTy</b></a>()</li><li class="is-family-code">public llvm::ConstantInt *  <a href="#07198F0AB3182EED"><b>getFalse</b></a>()</li><li class="is-family-code">public llvm::FastMathFlags  <a href="#A2FC54ECD9964FAF"><b>getFastMathFlags</b></a>() const</li><li class="is-family-code">public llvm::FastMathFlags &amp;  <a href="#B02A838C5DDA7714"><b>getFastMathFlags</b></a>()</li><li class="is-family-code">public llvm::Type *  <a href="#02AAE5DB1BE86E9D"><b>getFloatTy</b></a>()</li><li class="is-family-code">public llvm::Type *  <a href="#121886A0ED92742E"><b>getHalfTy</b></a>()</li><li class="is-family-code">public llvm::ConstantInt *  <a href="#2251C613AA60C1CD"><b>getInt</b></a>(const llvm::APInt &amp; AI)</li><li class="is-family-code">public llvm::ConstantInt *  <a href="#135D7220988EB8F5"><b>getInt1</b></a>(bool V)</li><li class="is-family-code">public llvm::IntegerType *  <a href="#5009163770E8FCFD"><b>getInt128Ty</b></a>()</li><li class="is-family-code">public llvm::ConstantInt *  <a href="#6641607721E77EEA"><b>getInt16</b></a>(uint16_t C)</li><li class="is-family-code">public llvm::IntegerType *  <a href="#35F3F72830662732"><b>getInt16Ty</b></a>()</li><li class="is-family-code">public llvm::IntegerType *  <a href="#86D8E17649F97C7F"><b>getInt1Ty</b></a>()</li><li class="is-family-code">public llvm::ConstantInt *  <a href="#D582B3E55E7047B8"><b>getInt32</b></a>(uint32_t C)</li><li class="is-family-code">public llvm::IntegerType *  <a href="#C87E329FDCAE6852"><b>getInt32Ty</b></a>()</li><li class="is-family-code">public llvm::ConstantInt *  <a href="#DB2E0EAFCA56B652"><b>getInt64</b></a>(uint64_t C)</li><li class="is-family-code">public llvm::IntegerType *  <a href="#2DA6321FA0B2635A"><b>getInt64Ty</b></a>()</li><li class="is-family-code">public llvm::ConstantInt *  <a href="#583D9DE28AE276A0"><b>getInt8</b></a>(uint8_t C)</li><li class="is-family-code">public llvm::PointerType *  <a href="#98C1EE08C6F5CB6A"><b>getInt8PtrTy</b></a>(unsigned int AddrSpace = 0)</li><li class="is-family-code">public llvm::IntegerType *  <a href="#2A09D177CA5DDF0F"><b>getInt8Ty</b></a>()</li><li class="is-family-code">public llvm::ConstantInt *  <a href="#650568A1D537C835"><b>getIntN</b></a>(unsigned int N, uint64_t C)</li><li class="is-family-code">public llvm::IntegerType *  <a href="#B86F54D6FC72B0F1"><b>getIntNTy</b></a>(unsigned int N)</li><li class="is-family-code">public llvm::IntegerType *  <a href="#243F26EF39926559"><b>getIntPtrTy</b></a>(const llvm::DataLayout &amp; DL, unsigned int AddrSpace = 0)</li><li class="is-family-code">public bool  <a href="#D2D3AFE63CBB4DAC"><b>getIsFPConstrained</b></a>()</li><li class="is-family-code">public llvm::PointerType *  <a href="#7B49E43B690E4F8C"><b>getPtrTy</b></a>(unsigned int AddrSpace = 0)</li><li class="is-family-code">public llvm::ConstantInt *  <a href="#94FADB0E0716D3E7"><b>getTrue</b></a>()</li><li class="is-family-code">public llvm::Type *  <a href="#1780C73999E3E892"><b>getVoidTy</b></a>()</li><li class="is-family-code">public void  <a href="#60262D04DB15E371"><b>restoreIP</b></a>(llvm::IRBuilderBase::InsertPoint IP)</li><li class="is-family-code">public llvm::IRBuilderBase::InsertPoint  <a href="#2DE4EBCBD94FF0A4"><b>saveAndClearIP</b></a>()</li><li class="is-family-code">public llvm::IRBuilderBase::InsertPoint  <a href="#3776D8928B9677DC"><b>saveIP</b></a>() const</li><li class="is-family-code">public void  <a href="#B75619C832CBC58B"><b>setConstrainedFPCallAttr</b></a>(llvm::CallBase * I)</li><li class="is-family-code">public void  <a href="#97BAC13ABE4CD2CF"><b>setConstrainedFPFunctionAttr</b></a>()</li><li class="is-family-code">public void  <a href="#F8EE48031647AA44"><b>setDefaultConstrainedExcept</b></a>(fp::ExceptionBehavior NewExcept)</li><li class="is-family-code">public void  <a href="#5D251745C6977F9C"><b>setDefaultConstrainedRounding</b></a>(llvm::RoundingMode NewRounding)</li><li class="is-family-code">public void  <a href="#A18ED64562EA7FAE"><b>setDefaultFPMathTag</b></a>(llvm::MDNode * FPMathTag)</li><li class="is-family-code">public void  <a href="#B7ECE5B3C5923BF1"><b>setDefaultOperandBundles</b></a>(ArrayRef&lt;llvm::OperandBundleDef&gt; OpBundles)</li><li class="is-family-code">private llvm::Instruction *  <a href="#75A7D122B466C28C"><b>setFPAttrs</b></a>(llvm::Instruction * I, llvm::MDNode * FPMD, llvm::FastMathFlags FMF) const</li><li class="is-family-code">public void  <a href="#E6DC1AE90593488A"><b>setFastMathFlags</b></a>(llvm::FastMathFlags NewFMF)</li><li class="is-family-code">public void  <a href="#50B233455E3633A8"><b>setIsFPConstrained</b></a>(bool IsCon)</li></ul><h2>Methods</h2><h3 id="2ACAC97BE2280907"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2ACAC97BE2280907">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AddMetadataToInst</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* I)</span> <span class="hljs-keyword">const</span></span></code></pre></h3><h4>Description</h4><p>Add all entries in MetadataToCopy to \p I.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L224">llvm/include/llvm/IR/IRBuilder.h:224</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> I</b></dt></dl><h3 id="158A690CE92B3AF4"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#158A690CE92B3AF4">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AddOrRemoveMetadataToCopy</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Kind,
                               </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* MD)</span></span></code></pre></h3><h4>Description</h4><p>Add or update the an entry (Kind, MD) to MetadataToCopy, if \p MD is not null. If \p MD is null, remove the entry with \p Kind.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L100">llvm/include/llvm/IR/IRBuilder.h:100</a></p><h4>Parameters</h4><dl><dt class="is-family-code">unsigned int<b> Kind</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> MD</b></dt></dl><h3 id="CFE512771B15ACDF"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CFE512771B15ACDF">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ClearInsertionPoint</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Clear the insertion point: created instructions will not be inserted into a block.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L168">llvm/include/llvm/IR/IRBuilder.h:168</a></p><h3 id="6E71CCBFA1869E1D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6E71CCBFA1869E1D">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">CollectMetadataToCopy</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* Src,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>&gt; MetadataKinds)</span></span></code></pre></h3><h4>Description</h4><p>Collect
 metadata with IDs \p MetadataKinds from \p Src which should be added to
 all created instructions. Entries present in MedataDataToCopy but not 
on \p Src will be dropped from MetadataToCopy.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L210">llvm/include/llvm/IR/IRBuilder.h:210</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> Src</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;unsigned int&gt;<b> MetadataKinds</b></dt></dl><h3 id="F4CFD2E0DB071661"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F4CFD2E0DB071661">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateAShr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">uint64_t</span> RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> isExact = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1343">llvm/include/llvm/IR/IRBuilder.h:1343</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">uint64_t<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> isExact</b> = false</dt></dl><h3 id="64110B82B0612464"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#64110B82B0612464">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateAShr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html"><span class="hljs-function"><span class="hljs-params">llvm::APInt</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> isExact = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1338">llvm/include/llvm/IR/IRBuilder.h:1338</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html">llvm::APInt</a>&amp;<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> isExact</b> = false</dt></dl><h3 id="23C6A2471F9C47D0"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#23C6A2471F9C47D0">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateAShr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> isExact = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1329">llvm/include/llvm/IR/IRBuilder.h:1329</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> isExact</b> = false</dt></dl><h3 id="5794DCC12834D6EE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5794DCC12834D6EE">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateAdd</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> HasNUW = <span class="hljs-literal">false</span>,
    <span class="hljs-keyword">bool</span> HasNSW = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1200">llvm/include/llvm/IR/IRBuilder.h:1200</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> HasNUW</b> = false</dt><dt class="is-family-code">bool<b> HasNSW</b> = false</dt></dl><h3 id="0AE15FDBFEDB70AA"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0AE15FDBFEDB70AA">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAddReduce</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src)</span></span></code></pre></h3><h4>Description</h4><p>Create a vector int add reduction intrinsic of the source vector.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L707">llvm/include/llvm/IR/IRBuilder.h:707</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt></dl><h3 id="336EE9CA19D6D306"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#336EE9CA19D6D306">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateAddrSpaceCast</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1957">llvm/include/llvm/IR/IRBuilder.h:1957</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="26252362143F69DF"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#26252362143F69DF">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE3FCDA044CB15AAD.html"><span class="hljs-function">llvm::ReturnInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAggregateRet</span><span class="hljs-params">(
    llvm::Value* <span class="hljs-keyword">const</span>* retVals,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> N)</span></span></code></pre></h3><h4>Description</h4><p>Create
 a sequence of N insertvalue instructions, with one Value from the 
retVals array each, that build a aggregate return value one value at a 
time, and a ret instruction to return the resulting aggregate value. 
This is a convenience function for code that uses aggregate return 
values as a vehicle for having multiple return values.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L976">llvm/include/llvm/IR/IRBuilder.h:976</a></p><h4>Parameters</h4><dl><dt class="is-family-code">llvm::Value* const*<b> retVals</b></dt><dt class="is-family-code">unsigned int<b> N</b></dt></dl><h3 id="C374C2A3D851C599"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C374C2A3D851C599">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r537857E9FE6D2795.html"><span class="hljs-function">llvm::LoadInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAlignedLoad</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> Align,
    <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* Name)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1666">llvm/include/llvm/IR/IRBuilder.h:1666</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> Align</b></dt><dt class="is-family-code">const char*<b> Name</b></dt></dl><h3 id="5A2B6A13102038EC"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5A2B6A13102038EC">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r537857E9FE6D2795.html"><span class="hljs-function">llvm::LoadInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAlignedLoad</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> Align,
    <span class="hljs-keyword">bool</span> isVolatile,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1676">llvm/include/llvm/IR/IRBuilder.h:1676</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> Align</b></dt><dt class="is-family-code">bool<b> isVolatile</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="610AFF2D7F1DBACF"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#610AFF2D7F1DBACF">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r537857E9FE6D2795.html"><span class="hljs-function">llvm::LoadInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAlignedLoad</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> Align,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1671">llvm/include/llvm/IR/IRBuilder.h:1671</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> Align</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="2A90ED73DAC8A71C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2A90ED73DAC8A71C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r9139824E2B7B4B8F.html"><span class="hljs-function">llvm::StoreInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAlignedStore</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> Align,
    <span class="hljs-keyword">bool</span> isVolatile = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1685">llvm/include/llvm/IR/IRBuilder.h:1685</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> Align</b></dt><dt class="is-family-code">bool<b> isVolatile</b> = false</dt></dl><h3 id="34095886E08C4471"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#34095886E08C4471">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAlignmentAssumption</span><span class="hljs-params">(
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r36886900CAFBFB15.html"><span class="hljs-function"><span class="hljs-params">llvm::DataLayout</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; DL,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* PtrValue,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Alignment,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* OffsetValue = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create
 an assume intrinsic call that represents an alignment assumption on the
 provided pointer. An optional offset can be provided, and if it is 
provided, the offset must be subtracted from the provided pointer to get
 the pointer with the specified alignment.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2451">llvm/include/llvm/IR/IRBuilder.h:2451</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r36886900CAFBFB15.html">llvm::DataLayout</a>&amp;<b> DL</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> PtrValue</b></dt><dt class="is-family-code">unsigned int<b> Alignment</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> OffsetValue</b> = nullptr</dt></dl><h3 id="19AAA5F8AADBD6A7"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#19AAA5F8AADBD6A7">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAlignmentAssumption</span><span class="hljs-params">(
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r36886900CAFBFB15.html"><span class="hljs-function"><span class="hljs-params">llvm::DataLayout</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; DL,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* PtrValue,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Alignment,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* OffsetValue = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create
 an assume intrinsic call that represents an alignment assumption on the
 provided pointer. An optional offset can be provided, and if it is 
provided, the offset must be subtracted from the provided pointer to get
 the pointer with the specified alignment. This overload handles the 
condition where the Alignment is dependent on an existing value rather 
than a static value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2464">llvm/include/llvm/IR/IRBuilder.h:2464</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r36886900CAFBFB15.html">llvm::DataLayout</a>&amp;<b> DL</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> PtrValue</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Alignment</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> OffsetValue</b> = nullptr</dt></dl><h3 id="90FD5B5D22D2F1DA"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#90FD5B5D22D2F1DA">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAlignmentAssumptionHelper</span><span class="hljs-params">(
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r36886900CAFBFB15.html"><span class="hljs-function"><span class="hljs-params">llvm::DataLayout</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; DL,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* PtrValue,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* AlignValue,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* OffsetValue)</span></span></code></pre></h3><h4>Description</h4><p>Helper
 function that creates an assume intrinsic call that represents an 
alignment assumption on the provided pointer \p PtrValue with offset \p 
OffsetValue and alignment value \p AlignValue.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2440">llvm/include/llvm/IR/IRBuilder.h:2440</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r36886900CAFBFB15.html">llvm::DataLayout</a>&amp;<b> DL</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> PtrValue</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> AlignValue</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> OffsetValue</b></dt></dl><h3 id="E9F0129458B45709"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E9F0129458B45709">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rED2AB873C2DB35B1.html"><span class="hljs-function">llvm::AllocaInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAlloca</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* ArraySize = <span class="hljs-literal">nullptr</span>,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1639">llvm/include/llvm/IR/IRBuilder.h:1639</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> ArraySize</b> = nullptr</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="4DB196DD2076A259"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4DB196DD2076A259">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rED2AB873C2DB35B1.html"><span class="hljs-function">llvm::AllocaInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAlloca</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> AddrSpace,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* ArraySize = <span class="hljs-literal">nullptr</span>,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1632">llvm/include/llvm/IR/IRBuilder.h:1632</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code">unsigned int<b> AddrSpace</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> ArraySize</b> = nullptr</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="55F68FDC7219F79A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#55F68FDC7219F79A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateAnd</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">uint64_t</span> RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1358">llvm/include/llvm/IR/IRBuilder.h:1358</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">uint64_t<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="EA440AF5ACFBE183"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#EA440AF5ACFBE183">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateAnd</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1348">llvm/include/llvm/IR/IRBuilder.h:1348</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="8F7B06F3A7846424"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8F7B06F3A7846424">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateAnd</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html"><span class="hljs-function"><span class="hljs-params">llvm::APInt</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1354">llvm/include/llvm/IR/IRBuilder.h:1354</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html">llvm::APInt</a>&amp;<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="E8B637343C3B8B21"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E8B637343C3B8B21">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateAnd</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Ops)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1362">llvm/include/llvm/IR/IRBuilder.h:1362</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Ops</b></dt></dl><h3 id="04D714D06415AC7F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#04D714D06415AC7F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAndReduce</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src)</span></span></code></pre></h3><h4>Description</h4><p>Create a vector int AND reduction intrinsic of the source vector.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L713">llvm/include/llvm/IR/IRBuilder.h:713</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt></dl><h3 id="831F87EC6A9F6089"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#831F87EC6A9F6089">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateArithmeticFence</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DstType,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to the arithmetic_fence intrinsic.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L911">llvm/include/llvm/IR/IRBuilder.h:911</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DstType</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="26DC22768618D46D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#26DC22768618D46D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAssumption</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Cond,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::OperandBundleDef&gt; OpBundles =
        llvm::None)</span></span></code></pre></h3><h4>Description</h4><p>Create
 an assume intrinsic call that allows the optimizer to assume that the 
provided condition will be true. The optional argument \p OpBundles 
specifies operand bundles that are added to the call instruction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L774">llvm/include/llvm/IR/IRBuilder.h:774</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Cond</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::OperandBundleDef&gt;<b> OpBundles</b> = llvm::None</dt></dl><h3 id="AEDB082818F10CC1"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#AEDB082818F10CC1">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r16BB52CCA41D2899.html"><span class="hljs-function">llvm::AtomicCmpXchgInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAtomicCmpXchg</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Cmp,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* New,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> Align,
    llvm::AtomicOrdering SuccessOrdering,
    llvm::AtomicOrdering FailureOrdering,
    SyncScope::ID SSID = SyncScope::System)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1700">llvm/include/llvm/IR/IRBuilder.h:1700</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Cmp</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> New</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> Align</b></dt><dt class="is-family-code">llvm::AtomicOrdering<b> SuccessOrdering</b></dt><dt class="is-family-code">llvm::AtomicOrdering<b> FailureOrdering</b></dt><dt class="is-family-code">SyncScope::ID<b> SSID</b> = SyncScope::System</dt></dl><h3 id="275A574BE6CDF8B5"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#275A574BE6CDF8B5">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r640C0F9E1586D26B.html"><span class="hljs-function">llvm::AtomicRMWInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateAtomicRMW</span><span class="hljs-params">(
    AtomicRMWInst::BinOp Op,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> Align,
    llvm::AtomicOrdering Ordering,
    SyncScope::ID SSID = SyncScope::System)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1713">llvm/include/llvm/IR/IRBuilder.h:1713</a></p><h4>Parameters</h4><dl><dt class="is-family-code">AtomicRMWInst::BinOp<b> Op</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> Align</b></dt><dt class="is-family-code">llvm::AtomicOrdering<b> Ordering</b></dt><dt class="is-family-code">SyncScope::ID<b> SSID</b> = SyncScope::System</dt></dl><h3 id="A1DA3D9789C68C01"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A1DA3D9789C68C01">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateBinOp</span><span class="hljs-params">(
    Instruction::BinaryOps Opc,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1538">llvm/include/llvm/IR/IRBuilder.h:1538</a></p><h4>Parameters</h4><dl><dt class="is-family-code">Instruction::BinaryOps<b> Opc</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="B45282B483B5DB51"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B45282B483B5DB51">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateBinaryIntrinsic</span><span class="hljs-params">(
    Intrinsic::ID ID,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* FMFSource = <span class="hljs-literal">nullptr</span>,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to intrinsic \p ID with 2 operands which is mangled on the first type.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L878">llvm/include/llvm/IR/IRBuilder.h:878</a></p><h4>Parameters</h4><dl><dt class="is-family-code">Intrinsic::ID<b> ID</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> FMFSource</b> = nullptr</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="7B3916812EF69CF5"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7B3916812EF69CF5">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateBitCast</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1952">llvm/include/llvm/IR/IRBuilder.h:1952</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="D318413084BA977A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D318413084BA977A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateBitOrPointerCast</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2030">llvm/include/llvm/IR/IRBuilder.h:2030</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="4B01D12E96DA9608"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4B01D12E96DA9608">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5DC16D915F4AEC0F.html"><span class="hljs-function">llvm::BranchInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateBr</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* Dest)</span></span></code></pre></h3><h4>Description</h4><p>Create an unconditional 'br label X' instruction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L984">llvm/include/llvm/IR/IRBuilder.h:984</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> Dest</b></dt></dl><h3 id="1EE2C5CB14541F12"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1EE2C5CB14541F12">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCall</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::OperandBundleDef&gt; OpBundles,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2257">llvm/include/llvm/IR/IRBuilder.h:2257</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::OperandBundleDef&gt;<b> OpBundles</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="4DDAF6B80A179C9C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4DDAF6B80A179C9C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCall</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args = None,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2251">llvm/include/llvm/IR/IRBuilder.h:2251</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b> = None</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="0284BCE83612FE63"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0284BCE83612FE63">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCall</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionType</span></span></a><span class="hljs-function"><span class="hljs-params">* FTy,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::OperandBundleDef&gt; OpBundles,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2240">llvm/include/llvm/IR/IRBuilder.h:2240</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html">llvm::FunctionType</a>*<b> FTy</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::OperandBundleDef&gt;<b> OpBundles</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="7063D15FFABB3B87"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7063D15FFABB3B87">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCall</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionType</span></span></a><span class="hljs-function"><span class="hljs-params">* FTy,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args = None,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2229">llvm/include/llvm/IR/IRBuilder.h:2229</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html">llvm::FunctionType</a>*<b> FTy</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b> = None</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="3CFE3E37F2469C93"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3CFE3E37F2469C93">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r1282A48666DB00E6.html"><span class="hljs-function">llvm::CallBrInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCallBr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionType</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* DefaultDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::BasicBlock*&gt; IndirectDests,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args = None,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a callbr instruction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1067">llvm/include/llvm/IR/IRBuilder.h:1067</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html">llvm::FunctionType</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> DefaultDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::BasicBlock*&gt;<b> IndirectDests</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b> = None</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="7008DC3DE9329A22"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7008DC3DE9329A22">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r1282A48666DB00E6.html"><span class="hljs-function">llvm::CallBrInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCallBr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionType</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* DefaultDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::BasicBlock*&gt; IndirectDests,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::OperandBundleDef&gt; OpBundles,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1075">llvm/include/llvm/IR/IRBuilder.h:1075</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html">llvm::FunctionType</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> DefaultDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::BasicBlock*&gt;<b> IndirectDests</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::OperandBundleDef&gt;<b> OpBundles</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="32E7CA327A3208E9"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#32E7CA327A3208E9">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r1282A48666DB00E6.html"><span class="hljs-function">llvm::CallBrInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCallBr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* DefaultDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::BasicBlock*&gt; IndirectDests,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args = None,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1086">llvm/include/llvm/IR/IRBuilder.h:1086</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> DefaultDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::BasicBlock*&gt;<b> IndirectDests</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b> = None</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="A125335EAFDB7B90"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A125335EAFDB7B90">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r1282A48666DB00E6.html"><span class="hljs-function">llvm::CallBrInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCallBr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* DefaultDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::BasicBlock*&gt; IndirectDests,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::OperandBundleDef&gt; OpBundles,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1093">llvm/include/llvm/IR/IRBuilder.h:1093</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> DefaultDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::BasicBlock*&gt;<b> IndirectDests</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::OperandBundleDef&gt;<b> OpBundles</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="3D62A0C9D718C810"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3D62A0C9D718C810">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateCast</span><span class="hljs-params">(
    Instruction::CastOps Op,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1989">llvm/include/llvm/IR/IRBuilder.h:1989</a></p><h4>Parameters</h4><dl><dt class="is-family-code">Instruction::CastOps<b> Op</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="BF825B62DF6D41C8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BF825B62DF6D41C8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rCDE1E623C02F5CB1.html"><span class="hljs-function">llvm::CatchPadInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCatchPad</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* ParentPad,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1118">llvm/include/llvm/IR/IRBuilder.h:1118</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> ParentPad</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="C140323A70D26CDA"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C140323A70D26CDA">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4833BF2EEDB23C6A.html"><span class="hljs-function">llvm::CatchReturnInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCatchRet</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rCDE1E623C02F5CB1.html"><span class="hljs-function"><span class="hljs-params">llvm::CatchPadInst</span></span></a><span class="hljs-function"><span class="hljs-params">* CatchPad,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* BB)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1129">llvm/include/llvm/IR/IRBuilder.h:1129</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rCDE1E623C02F5CB1.html">llvm::CatchPadInst</a>*<b> CatchPad</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> BB</b></dt></dl><h3 id="B3812C13E15D10B6"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B3812C13E15D10B6">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r076541658CB58737.html"><span class="hljs-function">llvm::CatchSwitchInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCatchSwitch</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* ParentPad,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* UnwindBB,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> NumHandlers,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1111">llvm/include/llvm/IR/IRBuilder.h:1111</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> ParentPad</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> UnwindBB</b></dt><dt class="is-family-code">unsigned int<b> NumHandlers</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="153FC94D4B6845DB"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#153FC94D4B6845DB">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r441709DFED15698D.html"><span class="hljs-function">llvm::CleanupPadInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCleanupPad</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* ParentPad,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args = None,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1123">llvm/include/llvm/IR/IRBuilder.h:1123</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> ParentPad</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b> = None</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="3D90B5AD0179385F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3D90B5AD0179385F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r1713ED1EA4DA2B1F.html"><span class="hljs-function">llvm::CleanupReturnInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCleanupRet</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r441709DFED15698D.html"><span class="hljs-function"><span class="hljs-params">llvm::CleanupPadInst</span></span></a><span class="hljs-function"><span class="hljs-params">* CleanupPad,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* UnwindBB = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1106">llvm/include/llvm/IR/IRBuilder.h:1106</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r441709DFED15698D.html">llvm::CleanupPadInst</a>*<b> CleanupPad</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> UnwindBB</b> = nullptr</dt></dl><h3 id="C87E27EC0D1A033C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C87E27EC0D1A033C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateCmp</span><span class="hljs-params">(
    CmpInst::Predicate Pred,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2191">llvm/include/llvm/IR/IRBuilder.h:2191</a></p><h4>Parameters</h4><dl><dt class="is-family-code">CmpInst::Predicate<b> Pred</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="98C5A2C153E3F27C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#98C5A2C153E3F27C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5DC16D915F4AEC0F.html"><span class="hljs-function">llvm::BranchInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCondBr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Cond,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* True,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* False,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* BranchWeights = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* Unpredictable = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a conditional 'br Cond, TrueDest, FalseDest' instruction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L990">llvm/include/llvm/IR/IRBuilder.h:990</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Cond</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> True</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> False</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> BranchWeights</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> Unpredictable</b> = nullptr</dt></dl><h3 id="F334046E5D322F48"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F334046E5D322F48">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5DC16D915F4AEC0F.html"><span class="hljs-function">llvm::BranchInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateCondBr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Cond,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* True,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* False,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* MDSrc)</span></span></code></pre></h3><h4>Description</h4><p>Create a conditional 'br Cond, TrueDest, FalseDest' instruction. Copy branch meta data if available.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L999">llvm/include/llvm/IR/IRBuilder.h:999</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Cond</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> True</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> False</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> MDSrc</b></dt></dl><h3 id="5C7713DC72F46DBA"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5C7713DC72F46DBA">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstGEP1_32</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Idx0,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1740">llvm/include/llvm/IR/IRBuilder.h:1740</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">unsigned int<b> Idx0</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="D455EEAF0354DC37"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D455EEAF0354DC37">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstGEP1_64</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">uint64_t</span> Idx0,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1786">llvm/include/llvm/IR/IRBuilder.h:1786</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">uint64_t<b> Idx0</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="D694178978CDFBDA"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D694178978CDFBDA">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstGEP2_32</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Idx0,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Idx1,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1760">llvm/include/llvm/IR/IRBuilder.h:1760</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">unsigned int<b> Idx0</b></dt><dt class="is-family-code">unsigned int<b> Idx1</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="242C0238373A6B39"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#242C0238373A6B39">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstGEP2_64</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">uint64_t</span> Idx0,
    <span class="hljs-keyword">uint64_t</span> Idx1,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1806">llvm/include/llvm/IR/IRBuilder.h:1806</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">uint64_t<b> Idx0</b></dt><dt class="is-family-code">uint64_t<b> Idx1</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="D71C7603625265AE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D71C7603625265AE">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstInBoundsGEP1_32</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Idx0,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1750">llvm/include/llvm/IR/IRBuilder.h:1750</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">unsigned int<b> Idx0</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="7FDA7B504DD08358"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7FDA7B504DD08358">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstInBoundsGEP1_64</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">uint64_t</span> Idx0,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1796">llvm/include/llvm/IR/IRBuilder.h:1796</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">uint64_t<b> Idx0</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="E88AAEB3837F174F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E88AAEB3837F174F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstInBoundsGEP2_32</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Idx0,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Idx1,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1773">llvm/include/llvm/IR/IRBuilder.h:1773</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">unsigned int<b> Idx0</b></dt><dt class="is-family-code">unsigned int<b> Idx1</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="48DBBA1826C3FE6F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#48DBBA1826C3FE6F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstInBoundsGEP2_64</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">uint64_t</span> Idx0,
    <span class="hljs-keyword">uint64_t</span> Idx1,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1819">llvm/include/llvm/IR/IRBuilder.h:1819</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">uint64_t<b> Idx0</b></dt><dt class="is-family-code">uint64_t<b> Idx1</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="36A70468BB1582E3"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#36A70468BB1582E3">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstrainedFPBinOp</span><span class="hljs-params">(
    Intrinsic::ID ID,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* FMFSource = <span class="hljs-literal">nullptr</span>,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::RoundingMode&gt; Rounding = None,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;fp::ExceptionBehavior&gt; Except = None)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1569">llvm/include/llvm/IR/IRBuilder.h:1569</a></p><h4>Parameters</h4><dl><dt class="is-family-code">Intrinsic::ID<b> ID</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> FMFSource</b> = nullptr</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;llvm::RoundingMode&gt;<b> Rounding</b> = None</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;fp::ExceptionBehavior&gt;<b> Except</b> = None</dt></dl><h3 id="704E2FDF02BB7668"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#704E2FDF02BB7668">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstrainedFPCall</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rADBA2A8E0906EC47.html"><span class="hljs-function"><span class="hljs-params">llvm::Function</span></span></a><span class="hljs-function"><span class="hljs-params">* Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::RoundingMode&gt; Rounding = None,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;fp::ExceptionBehavior&gt; Except = None)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2264">llvm/include/llvm/IR/IRBuilder.h:2264</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rADBA2A8E0906EC47.html">llvm::Function</a>*<b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;llvm::RoundingMode&gt;<b> Rounding</b> = None</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;fp::ExceptionBehavior&gt;<b> Except</b> = None</dt></dl><h3 id="A9EDA4C47E5230AE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A9EDA4C47E5230AE">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstrainedFPCast</span><span class="hljs-params">(
    Intrinsic::ID ID,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* FMFSource = <span class="hljs-literal">nullptr</span>,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::RoundingMode&gt; Rounding = None,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;fp::ExceptionBehavior&gt; Except = None)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2050">llvm/include/llvm/IR/IRBuilder.h:2050</a></p><h4>Parameters</h4><dl><dt class="is-family-code">Intrinsic::ID<b> ID</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> FMFSource</b> = nullptr</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;llvm::RoundingMode&gt;<b> Rounding</b> = None</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;fp::ExceptionBehavior&gt;<b> Except</b> = None</dt></dl><h3 id="9D96011EA7B9B0B7"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9D96011EA7B9B0B7">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateConstrainedFPCmp</span><span class="hljs-params">(
    Intrinsic::ID ID,
    CmpInst::Predicate P,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;fp::ExceptionBehavior&gt; Except = None)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2213">llvm/include/llvm/IR/IRBuilder.h:2213</a></p><h4>Parameters</h4><dl><dt class="is-family-code">Intrinsic::ID<b> ID</b></dt><dt class="is-family-code">CmpInst::Predicate<b> P</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;fp::ExceptionBehavior&gt;<b> Except</b> = None</dt></dl><h3 id="3753DCC5572C8DEC"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3753DCC5572C8DEC">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">*
<span class="hljs-title">CreateElementUnorderedAtomicMemCpy</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Dst,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html"><span class="hljs-function"><span class="hljs-params">llvm::Align</span></span></a><span class="hljs-function"><span class="hljs-params"> DstAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html"><span class="hljs-function"><span class="hljs-params">llvm::Align</span></span></a><span class="hljs-function"><span class="hljs-params"> SrcAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Size,
    <span class="hljs-keyword">uint32_t</span> ElementSize,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAAStructTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create
 and insert an element unordered-atomic memcpy between the specified 
pointers. DstAlign/SrcAlign are the alignments of the Dst/Src pointers, 
respectively. If the pointers aren't i8*, they will be converted.  If a 
TBAA tag is specified, it will be added to the instruction. Likewise 
with alias.scope and noalias tags.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L658">llvm/include/llvm/IR/IRBuilder.h:658</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Dst</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html">llvm::Align</a><b> DstAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html">llvm::Align</a><b> SrcAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Size</b></dt><dt class="is-family-code">uint32_t<b> ElementSize</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAAStructTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="D31FDB537BFFEC17"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D31FDB537BFFEC17">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">*
<span class="hljs-title">CreateElementUnorderedAtomicMemMove</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Dst,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html"><span class="hljs-function"><span class="hljs-params">llvm::Align</span></span></a><span class="hljs-function"><span class="hljs-params"> DstAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html"><span class="hljs-function"><span class="hljs-params">llvm::Align</span></span></a><span class="hljs-function"><span class="hljs-params"> SrcAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Size,
    <span class="hljs-keyword">uint32_t</span> ElementSize,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAAStructTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create and insert an element unordered-atomic memmove between the specified pointers.</p><p>DstAlign/
SrcAlign are the alignments of the Dst/Src pointers, respectively. If 
the pointers aren't i8*, they will be converted.  If a TBAA tag is 
specified, it will be added to the instruction. Likewise with 
alias.scope and noalias tags.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L688">llvm/include/llvm/IR/IRBuilder.h:688</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Dst</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html">llvm::Align</a><b> DstAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html">llvm::Align</a><b> SrcAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Size</b></dt><dt class="is-family-code">uint32_t<b> ElementSize</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAAStructTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="E5FD11E48DCA730A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E5FD11E48DCA730A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">*
<span class="hljs-title">CreateElementUnorderedAtomicMemSet</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    <span class="hljs-keyword">uint64_t</span> Size,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html"><span class="hljs-function"><span class="hljs-params">llvm::Align</span></span></a><span class="hljs-function"><span class="hljs-params"> Alignment,
    <span class="hljs-keyword">uint32_t</span> ElementSize,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create
 and insert an element unordered-atomic memset of the region of memory 
starting at the given pointer to the given value. If the pointer isn't 
an i8*, it will be converted. If a TBAA tag is specified, it will be 
added to the instruction. Likewise with alias.scope and noalias tags.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L593">llvm/include/llvm/IR/IRBuilder.h:593</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code">uint64_t<b> Size</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html">llvm::Align</a><b> Alignment</b></dt><dt class="is-family-code">uint32_t<b> ElementSize</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="363152B2CD628AF3"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#363152B2CD628AF3">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">*
<span class="hljs-title">CreateElementUnorderedAtomicMemSet</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Size,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html"><span class="hljs-function"><span class="hljs-params">llvm::Align</span></span></a><span class="hljs-function"><span class="hljs-params"> Alignment,
    <span class="hljs-keyword">uint32_t</span> ElementSize,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L604">llvm/include/llvm/IR/IRBuilder.h:604</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Size</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html">llvm::Align</a><b> Alignment</b></dt><dt class="is-family-code">uint32_t<b> ElementSize</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="9F8B951AF0C2C2BE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9F8B951AF0C2C2BE">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateExactSDiv</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1273">llvm/include/llvm/IR/IRBuilder.h:1273</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="19DD19877C8C8DE8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#19DD19877C8C8DE8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateExactUDiv</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1260">llvm/include/llvm/IR/IRBuilder.h:1260</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="200BAA60DA89F335"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#200BAA60DA89F335">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateExtractElement</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Vec,
    <span class="hljs-keyword">uint64_t</span> Idx,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2283">llvm/include/llvm/IR/IRBuilder.h:2283</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Vec</b></dt><dt class="is-family-code">uint64_t<b> Idx</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="06723D155903AC80"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#06723D155903AC80">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateExtractElement</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Vec,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Idx,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2276">llvm/include/llvm/IR/IRBuilder.h:2276</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Vec</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Idx</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="6B656B3698653A0B"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6B656B3698653A0B">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateExtractInteger</span><span class="hljs-params">(
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r36886900CAFBFB15.html"><span class="hljs-function"><span class="hljs-params">llvm::DataLayout</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; DL,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* From,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r55C3D613CECF2206.html"><span class="hljs-function"><span class="hljs-params">llvm::IntegerType</span></span></a><span class="hljs-function"><span class="hljs-params">* ExtractedTy,
    <span class="hljs-keyword">uint64_t</span> Offset,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name)</span></span></code></pre></h3><h4>Description</h4><p>Return a value that has been extracted from a larger integer type.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2421">llvm/include/llvm/IR/IRBuilder.h:2421</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r36886900CAFBFB15.html">llvm::DataLayout</a>&amp;<b> DL</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> From</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r55C3D613CECF2206.html">llvm::IntegerType</a>*<b> ExtractedTy</b></dt><dt class="is-family-code">uint64_t<b> Offset</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b></dt></dl><h3 id="0CAA626D9C5055A8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0CAA626D9C5055A8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateExtractValue</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Agg,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>&gt; Idxs,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2332">llvm/include/llvm/IR/IRBuilder.h:2332</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Agg</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;unsigned int&gt;<b> Idxs</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="5EC309F95E11F8BE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5EC309F95E11F8BE">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateExtractVector</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DstType,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* SrcVec,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Idx,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to the vector.extract intrinsic.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L918">llvm/include/llvm/IR/IRBuilder.h:918</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DstType</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> SrcVec</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Idx</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="C31552839C8F36D7"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C31552839C8F36D7">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFAdd</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMD = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1406">llvm/include/llvm/IR/IRBuilder.h:1406</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMD</b> = nullptr</dt></dl><h3 id="4344C28B008B8A0F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4344C28B008B8A0F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFAddFMF</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* FMFSource,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Copy fast-math-flags from an instruction rather than using the builder's default FMF.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1420">llvm/include/llvm/IR/IRBuilder.h:1420</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> FMFSource</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="431BC1091D90F3DC"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#431BC1091D90F3DC">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateFAddReduce</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Acc,
                                 </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src)</span></span></code></pre></h3><h4>Description</h4><p>Create
 a sequential vector fadd reduction intrinsic of the source vector. The 
first parameter is a scalar accumulator value. An unordered reduction 
can be created by adding the reassoc fast-math flag to the resulting 
sequential reduction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L698">llvm/include/llvm/IR/IRBuilder.h:698</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Acc</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt></dl><h3 id="92373D427FF82971"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#92373D427FF82971">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmp</span><span class="hljs-params">(
    CmpInst::Predicate P,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2186">llvm/include/llvm/IR/IRBuilder.h:2186</a></p><h4>Parameters</h4><dl><dt class="is-family-code">CmpInst::Predicate<b> P</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="9A1F1F8A8CDFA437"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9A1F1F8A8CDFA437">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpHelper</span><span class="hljs-params">(
    CmpInst::Predicate P,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag,
    <span class="hljs-keyword">bool</span> IsSignaling)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2208">llvm/include/llvm/IR/IRBuilder.h:2208</a></p><h4>Parameters</h4><dl><dt class="is-family-code">CmpInst::Predicate<b> P</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b></dt><dt class="is-family-code">bool<b> IsSignaling</b></dt></dl><h3 id="8A1BF730533A5ED6"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8A1BF730533A5ED6">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpOEQ</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2106">llvm/include/llvm/IR/IRBuilder.h:2106</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="543482D662A048E0"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#543482D662A048E0">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpOGE</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2116">llvm/include/llvm/IR/IRBuilder.h:2116</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="4951FF4970BEB402"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4951FF4970BEB402">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpOGT</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2111">llvm/include/llvm/IR/IRBuilder.h:2111</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="BB8E6FDBF575AA46"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BB8E6FDBF575AA46">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpOLE</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2126">llvm/include/llvm/IR/IRBuilder.h:2126</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="D3A2DD047A1C9B72"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D3A2DD047A1C9B72">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpOLT</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2121">llvm/include/llvm/IR/IRBuilder.h:2121</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="F47A0E3885343703"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F47A0E3885343703">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpONE</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2131">llvm/include/llvm/IR/IRBuilder.h:2131</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="99EFD849152C8055"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#99EFD849152C8055">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpORD</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2136">llvm/include/llvm/IR/IRBuilder.h:2136</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="8D76D9C28BB35529"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8D76D9C28BB35529">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpS</span><span class="hljs-params">(
    CmpInst::Predicate P,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2201">llvm/include/llvm/IR/IRBuilder.h:2201</a></p><h4>Parameters</h4><dl><dt class="is-family-code">CmpInst::Predicate<b> P</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="AAAB16137C3A4728"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#AAAB16137C3A4728">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpUEQ</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2146">llvm/include/llvm/IR/IRBuilder.h:2146</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="C1FA661F878460A8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C1FA661F878460A8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpUGE</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2156">llvm/include/llvm/IR/IRBuilder.h:2156</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="42A3478D3FCD79FE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#42A3478D3FCD79FE">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpUGT</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2151">llvm/include/llvm/IR/IRBuilder.h:2151</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="75CF42CAABFF13EA"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#75CF42CAABFF13EA">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpULE</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2166">llvm/include/llvm/IR/IRBuilder.h:2166</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="51663044C580774E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#51663044C580774E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpULT</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2161">llvm/include/llvm/IR/IRBuilder.h:2161</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="CCF6BD679654FE71"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CCF6BD679654FE71">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpUNE</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2171">llvm/include/llvm/IR/IRBuilder.h:2171</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="64E57EFE9216C93E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#64E57EFE9216C93E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFCmpUNO</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2141">llvm/include/llvm/IR/IRBuilder.h:2141</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="1A7B4E74828DC329"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1A7B4E74828DC329">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFDiv</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMD = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1487">llvm/include/llvm/IR/IRBuilder.h:1487</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMD</b> = nullptr</dt></dl><h3 id="034009111830BDDC"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#034009111830BDDC">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFDivFMF</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* FMFSource,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Copy fast-math-flags from an instruction rather than using the builder's default FMF.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1501">llvm/include/llvm/IR/IRBuilder.h:1501</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> FMFSource</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="104D35B33B907705"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#104D35B33B907705">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFMul</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMD = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1460">llvm/include/llvm/IR/IRBuilder.h:1460</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMD</b> = nullptr</dt></dl><h3 id="B76C381EDD1D9E7D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B76C381EDD1D9E7D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFMulFMF</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* FMFSource,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Copy fast-math-flags from an instruction rather than using the builder's default FMF.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1474">llvm/include/llvm/IR/IRBuilder.h:1474</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> FMFSource</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="F8CC0220701E32D0"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F8CC0220701E32D0">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateFMulReduce</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Acc,
                                 </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src)</span></span></code></pre></h3><h4>Description</h4><p>Create
 a sequential vector fmul reduction intrinsic of the source vector. The 
first parameter is a scalar accumulator value. An unordered reduction 
can be created by adding the reassoc fast-math flag to the resulting 
sequential reduction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L704">llvm/include/llvm/IR/IRBuilder.h:704</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Acc</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt></dl><h3 id="DE016ADC2E6718DC"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DE016ADC2E6718DC">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFNeg</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1589">llvm/include/llvm/IR/IRBuilder.h:1589</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="2F2567CE9012B032"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2F2567CE9012B032">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFNegFMF</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* FMFSource,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Copy fast-math-flags from an instruction rather than using the builder's default FMF.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1599">llvm/include/llvm/IR/IRBuilder.h:1599</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> FMFSource</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="89C02823BC3F7D59"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#89C02823BC3F7D59">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFPCast</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2042">llvm/include/llvm/IR/IRBuilder.h:2042</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="931EA78A0FBDD885"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#931EA78A0FBDD885">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFPExt</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1935">llvm/include/llvm/IR/IRBuilder.h:1935</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="5799A88A572A4B41"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5799A88A572A4B41">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateFPMaxReduce</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src)</span></span></code></pre></h3><h4>Description</h4><p>Create a vector float max reduction intrinsic of the source vector.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L731">llvm/include/llvm/IR/IRBuilder.h:731</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt></dl><h3 id="DD5505255EE1A4D8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DD5505255EE1A4D8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateFPMinReduce</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src)</span></span></code></pre></h3><h4>Description</h4><p>Create a vector float min reduction intrinsic of the source vector.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L735">llvm/include/llvm/IR/IRBuilder.h:735</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt></dl><h3 id="8465063A16F3C775"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8465063A16F3C775">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFPToSI</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1905">llvm/include/llvm/IR/IRBuilder.h:1905</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="AF8F5799B5AD5E21"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#AF8F5799B5AD5E21">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFPToUI</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1898">llvm/include/llvm/IR/IRBuilder.h:1898</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="57958F78F1399BE7"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#57958F78F1399BE7">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFPTrunc</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1926">llvm/include/llvm/IR/IRBuilder.h:1926</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="0ED70C8AC26312F9"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0ED70C8AC26312F9">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFRem</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMD = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1513">llvm/include/llvm/IR/IRBuilder.h:1513</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMD</b> = nullptr</dt></dl><h3 id="866BD1D284350091"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#866BD1D284350091">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFRemFMF</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* FMFSource,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Copy fast-math-flags from an instruction rather than using the builder's default FMF.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1526">llvm/include/llvm/IR/IRBuilder.h:1526</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> FMFSource</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="2FC1730E384A7FE8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2FC1730E384A7FE8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFSub</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMD = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1433">llvm/include/llvm/IR/IRBuilder.h:1433</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMD</b> = nullptr</dt></dl><h3 id="83688C9995C858EE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#83688C9995C858EE">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFSubFMF</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* L,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* R,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* FMFSource,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Copy fast-math-flags from an instruction rather than using the builder's default FMF.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1447">llvm/include/llvm/IR/IRBuilder.h:1447</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> L</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> R</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> FMFSource</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="16EBF906E0A19D71"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#16EBF906E0A19D71">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rB641297A7D0C0A7C.html"><span class="hljs-function">llvm::FenceInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateFence</span><span class="hljs-params">(
    llvm::AtomicOrdering Ordering,
    SyncScope::ID SSID = SyncScope::System,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1693">llvm/include/llvm/IR/IRBuilder.h:1693</a></p><h4>Parameters</h4><dl><dt class="is-family-code">llvm::AtomicOrdering<b> Ordering</b></dt><dt class="is-family-code">SyncScope::ID<b> SSID</b> = SyncScope::System</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="48D1B6342E6036C9"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#48D1B6342E6036C9">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateFreeze</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2351">llvm/include/llvm/IR/IRBuilder.h:2351</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="5257B2C3F19716AC"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5257B2C3F19716AC">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateGCGetPointerBase</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* DerivedPtr,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to the experimental.gc.pointer.base intrinsic to get the base pointer for the specified derived pointer.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L857">llvm/include/llvm/IR/IRBuilder.h:857</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> DerivedPtr</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="17DA1E8AEBE05160"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#17DA1E8AEBE05160">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateGCGetPointerOffset</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* DerivedPtr,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create
 a call to the experimental.gc.get.pointer.offset intrinsic to get the 
offset of the specified derived pointer from its base.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L861">llvm/include/llvm/IR/IRBuilder.h:861</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> DerivedPtr</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="7A320732B735E1B8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7A320732B735E1B8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateGCRelocate</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* Statepoint,
    <span class="hljs-keyword">int</span> BaseOffset,
    <span class="hljs-keyword">int</span> DerivedOffset,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* ResultType,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to the experimental.gc.relocate intrinsics to project the relocated value of one pointer from the statepoint.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L849">llvm/include/llvm/IR/IRBuilder.h:849</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> Statepoint</b></dt><dt class="is-family-code">int<b> BaseOffset</b></dt><dt class="is-family-code">int<b> DerivedOffset</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> ResultType</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="9A64D27A930C3A2B"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9A64D27A930C3A2B">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateGCResult</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* Statepoint,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* ResultType,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to the experimental.gc.result intrinsic to extract the result from a call wrapped in a statepoint.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L843">llvm/include/llvm/IR/IRBuilder.h:843</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> Statepoint</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> ResultType</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="B368A0F4C913DA61"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B368A0F4C913DA61">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateGCStatepointCall</span><span class="hljs-params">(
    <span class="hljs-keyword">uint64_t</span> ID,
    <span class="hljs-keyword">uint32_t</span> NumPatchBytes,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> ActualCallee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; CallArgs,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt;&gt; DeoptArgs,
    ArrayRef&lt;llvm::Value*&gt; GCArgs,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to the experimental.gc.statepoint intrinsic to start a new statepoint sequence.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L786">llvm/include/llvm/IR/IRBuilder.h:786</a></p><h4>Parameters</h4><dl><dt class="is-family-code">uint64_t<b> ID</b></dt><dt class="is-family-code">uint32_t<b> NumPatchBytes</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> ActualCallee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> CallArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;ArrayRef&lt;llvm::Value*&gt;&gt;<b> DeoptArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> GCArgs</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="DA41E6CAE5F17CF7"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DA41E6CAE5F17CF7">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateGCStatepointCall</span><span class="hljs-params">(
    <span class="hljs-keyword">uint64_t</span> ID,
    <span class="hljs-keyword">uint32_t</span> NumPatchBytes,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> ActualCallee,
    <span class="hljs-keyword">uint32_t</span> Flags,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; CallArgs,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;ArrayRef&lt;llvm::Use&gt;&gt; TransitionArgs,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Use&gt;&gt; DeoptArgs,
    ArrayRef&lt;llvm::Value*&gt; GCArgs,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to the experimental.gc.statepoint intrinsic to start a new statepoint sequence.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L795">llvm/include/llvm/IR/IRBuilder.h:795</a></p><h4>Parameters</h4><dl><dt class="is-family-code">uint64_t<b> ID</b></dt><dt class="is-family-code">uint32_t<b> NumPatchBytes</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> ActualCallee</b></dt><dt class="is-family-code">uint32_t<b> Flags</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> CallArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;ArrayRef&lt;llvm::Use&gt;&gt;<b> TransitionArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;ArrayRef&lt;llvm::Use&gt;&gt;<b> DeoptArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> GCArgs</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="BB6A8AB63CE69A56"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BB6A8AB63CE69A56">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateGCStatepointCall</span><span class="hljs-params">(
    <span class="hljs-keyword">uint64_t</span> ID,
    <span class="hljs-keyword">uint32_t</span> NumPatchBytes,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> ActualCallee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Use&gt; CallArgs,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt;&gt; DeoptArgs,
    ArrayRef&lt;llvm::Value*&gt; GCArgs,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Conveninence
 function for the common case when CallArgs are filled in using 
makeArrayRef(CS.arg_begin(), CS.arg_end()); Use needs to be .get()'ed to
 get the Value pointer.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L806">llvm/include/llvm/IR/IRBuilder.h:806</a></p><h4>Parameters</h4><dl><dt class="is-family-code">uint64_t<b> ID</b></dt><dt class="is-family-code">uint32_t<b> NumPatchBytes</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> ActualCallee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Use&gt;<b> CallArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;ArrayRef&lt;llvm::Value*&gt;&gt;<b> DeoptArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> GCArgs</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="E32FC0870CC2D6CD"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E32FC0870CC2D6CD">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r2FC30BEF376E44C4.html"><span class="hljs-function">llvm::InvokeInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateGCStatepointInvoke</span><span class="hljs-params">(
    <span class="hljs-keyword">uint64_t</span> ID,
    <span class="hljs-keyword">uint32_t</span> NumPatchBytes,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> ActualInvokee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* NormalDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* UnwindDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; InvokeArgs,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt;&gt; DeoptArgs,
    ArrayRef&lt;llvm::Value*&gt; GCArgs,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create an invoke to the experimental.gc.statepoint intrinsic to start a new statepoint sequence.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L816">llvm/include/llvm/IR/IRBuilder.h:816</a></p><h4>Parameters</h4><dl><dt class="is-family-code">uint64_t<b> ID</b></dt><dt class="is-family-code">uint32_t<b> NumPatchBytes</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> ActualInvokee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> NormalDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> UnwindDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> InvokeArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;ArrayRef&lt;llvm::Value*&gt;&gt;<b> DeoptArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> GCArgs</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="E23934EE1750B93D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E23934EE1750B93D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r2FC30BEF376E44C4.html"><span class="hljs-function">llvm::InvokeInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateGCStatepointInvoke</span><span class="hljs-params">(
    <span class="hljs-keyword">uint64_t</span> ID,
    <span class="hljs-keyword">uint32_t</span> NumPatchBytes,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> ActualInvokee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* NormalDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* UnwindDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Use&gt; InvokeArgs,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt;&gt; DeoptArgs,
    ArrayRef&lt;llvm::Value*&gt; GCArgs,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L835">llvm/include/llvm/IR/IRBuilder.h:835</a></p><h4>Parameters</h4><dl><dt class="is-family-code">uint64_t<b> ID</b></dt><dt class="is-family-code">uint32_t<b> NumPatchBytes</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> ActualInvokee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> NormalDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> UnwindDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Use&gt;<b> InvokeArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;ArrayRef&lt;llvm::Value*&gt;&gt;<b> DeoptArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> GCArgs</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="F76664753147539F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F76664753147539F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r2FC30BEF376E44C4.html"><span class="hljs-function">llvm::InvokeInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateGCStatepointInvoke</span><span class="hljs-params">(
    <span class="hljs-keyword">uint64_t</span> ID,
    <span class="hljs-keyword">uint32_t</span> NumPatchBytes,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> ActualInvokee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* NormalDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* UnwindDest,
    <span class="hljs-keyword">uint32_t</span> Flags,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; InvokeArgs,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;ArrayRef&lt;llvm::Use&gt;&gt; TransitionArgs,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Use&gt;&gt; DeoptArgs,
    ArrayRef&lt;llvm::Value*&gt; GCArgs,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create an invoke to the experimental.gc.statepoint intrinsic to start a new statepoint sequence.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L824">llvm/include/llvm/IR/IRBuilder.h:824</a></p><h4>Parameters</h4><dl><dt class="is-family-code">uint64_t<b> ID</b></dt><dt class="is-family-code">uint32_t<b> NumPatchBytes</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> ActualInvokee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> NormalDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> UnwindDest</b></dt><dt class="is-family-code">uint32_t<b> Flags</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> InvokeArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;ArrayRef&lt;llvm::Use&gt;&gt;<b> TransitionArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;ArrayRef&lt;llvm::Use&gt;&gt;<b> DeoptArgs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> GCArgs</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="BFA8D09E3FB76DA1"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BFA8D09E3FB76DA1">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateGEP</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; IdxList,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> IsInBounds = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1725">llvm/include/llvm/IR/IRBuilder.h:1725</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> IdxList</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> IsInBounds</b> = false</dt></dl><h3 id="D9389D831CE65E5D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D9389D831CE65E5D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r81054CAEBB0A2997.html"><span class="hljs-function">llvm::GlobalVariable</span></a><span class="hljs-function">* <span class="hljs-title">CreateGlobalString</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rECFCAF624C04523A.html"><span class="hljs-function"><span class="hljs-params">llvm::StringRef</span></span></a><span class="hljs-function"><span class="hljs-params"> Str,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> AddressSpace = <span class="hljs-number">0</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r1428BC327E1751C3.html"><span class="hljs-function"><span class="hljs-params">llvm::Module</span></span></a><span class="hljs-function"><span class="hljs-params">* M = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Make
 a new global variable with initializer type i8* Make a new global 
variable with an initializer that has array of i8 type filled in with 
the null terminated string value specified.  The new global variable 
will be marked mergable with any others of the same contents.  If Name 
is specified, it is the name of the global variable created. If no 
module is given via \p M, it is take from the insertion point basic 
block.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L431">llvm/include/llvm/IR/IRBuilder.h:431</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rECFCAF624C04523A.html">llvm::StringRef</a><b> Str</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">unsigned int<b> AddressSpace</b> = 0</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r1428BC327E1751C3.html">llvm::Module</a>*<b> M</b> = nullptr</dt></dl><h3 id="3295E0BD410846E9"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3295E0BD410846E9">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r0CE2309DD94A32FA.html"><span class="hljs-function">llvm::Constant</span></a><span class="hljs-function">* <span class="hljs-title">CreateGlobalStringPtr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rECFCAF624C04523A.html"><span class="hljs-function"><span class="hljs-params">llvm::StringRef</span></span></a><span class="hljs-function"><span class="hljs-params"> Str,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> AddressSpace = <span class="hljs-number">0</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r1428BC327E1751C3.html"><span class="hljs-function"><span class="hljs-params">llvm::Module</span></span></a><span class="hljs-function"><span class="hljs-params">* M = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Same
 as CreateGlobalString, but return a pointer with "i8*" type instead of a
 pointer to array of i8. If no module is given via \p M, it is take from
 the insertion point basic block.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1842">llvm/include/llvm/IR/IRBuilder.h:1842</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rECFCAF624C04523A.html">llvm::StringRef</a><b> Str</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">unsigned int<b> AddressSpace</b> = 0</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r1428BC327E1751C3.html">llvm::Module</a>*<b> M</b> = nullptr</dt></dl><h3 id="FC916D85F96E8E88"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#FC916D85F96E8E88">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateICmp</span><span class="hljs-params">(
    CmpInst::Predicate P,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2176">llvm/include/llvm/IR/IRBuilder.h:2176</a></p><h4>Parameters</h4><dl><dt class="is-family-code">CmpInst::Predicate<b> P</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="8271A453CCC676AD"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8271A453CCC676AD">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateICmpEQ</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2066">llvm/include/llvm/IR/IRBuilder.h:2066</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="3FF4EE15AC0D18C7"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3FF4EE15AC0D18C7">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateICmpNE</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2070">llvm/include/llvm/IR/IRBuilder.h:2070</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="10F8C88AC2C67FA3"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#10F8C88AC2C67FA3">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateICmpSGE</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2094">llvm/include/llvm/IR/IRBuilder.h:2094</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="D667E45FF586B1B5"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D667E45FF586B1B5">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateICmpSGT</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2090">llvm/include/llvm/IR/IRBuilder.h:2090</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="C6FE59F10585CC63"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C6FE59F10585CC63">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateICmpSLE</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2102">llvm/include/llvm/IR/IRBuilder.h:2102</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="6E527737E7CBFA8E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6E527737E7CBFA8E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateICmpSLT</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2098">llvm/include/llvm/IR/IRBuilder.h:2098</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="9B3CD7820D819C6E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9B3CD7820D819C6E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateICmpUGE</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2078">llvm/include/llvm/IR/IRBuilder.h:2078</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="2B9B54DAC89F3D69"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2B9B54DAC89F3D69">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateICmpUGT</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2074">llvm/include/llvm/IR/IRBuilder.h:2074</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="5BA88F185C6731F7"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5BA88F185C6731F7">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateICmpULE</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2086">llvm/include/llvm/IR/IRBuilder.h:2086</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="8E5EA35B96304FA3"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8E5EA35B96304FA3">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateICmpULT</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2082">llvm/include/llvm/IR/IRBuilder.h:2082</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="3DD3D449AAC5202F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3DD3D449AAC5202F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateInBoundsGEP</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; IdxList,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1735">llvm/include/llvm/IR/IRBuilder.h:1735</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> IdxList</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="BE421ECD74BD331A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BE421ECD74BD331A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6142143668BF9ABA.html"><span class="hljs-function">llvm::IndirectBrInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateIndirectBr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Addr,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> NumDests = <span class="hljs-number">10</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create
 an indirect branch instruction with the specified address operand, with
 an optional hint for the number of destinations that will be added (for
 efficient allocation).</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1023">llvm/include/llvm/IR/IRBuilder.h:1023</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Addr</b></dt><dt class="is-family-code">unsigned int<b> NumDests</b> = 10</dt></dl><h3 id="026579C6634D756D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#026579C6634D756D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateInsertElement</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* VecTy,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* NewElt,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Idx,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2288">llvm/include/llvm/IR/IRBuilder.h:2288</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> VecTy</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> NewElt</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Idx</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="B4E585AACAD22E54"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B4E585AACAD22E54">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateInsertElement</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* VecTy,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* NewElt,
    <span class="hljs-keyword">uint64_t</span> Idx,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2293">llvm/include/llvm/IR/IRBuilder.h:2293</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> VecTy</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> NewElt</b></dt><dt class="is-family-code">uint64_t<b> Idx</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="B78BBA5ADF71CD70"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B78BBA5ADF71CD70">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateInsertElement</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Vec,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* NewElt,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Idx,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2298">llvm/include/llvm/IR/IRBuilder.h:2298</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Vec</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> NewElt</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Idx</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="A73564C38A9D1EEF"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A73564C38A9D1EEF">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateInsertElement</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Vec,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* NewElt,
    <span class="hljs-keyword">uint64_t</span> Idx,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2305">llvm/include/llvm/IR/IRBuilder.h:2305</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Vec</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> NewElt</b></dt><dt class="is-family-code">uint64_t<b> Idx</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="EA65B601682A32BA"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#EA65B601682A32BA">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD8E863ED1964241F.html"><span class="hljs-function">llvm::BinaryOperator</span></a><span class="hljs-function">* <span class="hljs-title">CreateInsertNUWNSWBinOp</span><span class="hljs-params">(
    BinaryOperator::BinaryOps Opc,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name,
    <span class="hljs-keyword">bool</span> HasNUW,
    <span class="hljs-keyword">bool</span> HasNSW)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1141">llvm/include/llvm/IR/IRBuilder.h:1141</a></p><h4>Parameters</h4><dl><dt class="is-family-code">BinaryOperator::BinaryOps<b> Opc</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b></dt><dt class="is-family-code">bool<b> HasNUW</b></dt><dt class="is-family-code">bool<b> HasNSW</b></dt></dl><h3 id="58F6731B40AEB30C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#58F6731B40AEB30C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateInsertValue</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Agg,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>&gt; Idxs,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2339">llvm/include/llvm/IR/IRBuilder.h:2339</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Agg</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;unsigned int&gt;<b> Idxs</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="A91F843BEC87B320"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A91F843BEC87B320">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateInsertVector</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DstType,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* SrcVec,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* SubVec,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Idx,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to the vector.insert intrinsic.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L926">llvm/include/llvm/IR/IRBuilder.h:926</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DstType</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> SrcVec</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> SubVec</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Idx</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="6A483C4F4F7EE547"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6A483C4F4F7EE547">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateIntCast</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">*,
                           </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">*,
                           <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>*)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2060">llvm/include/llvm/IR/IRBuilder.h:2060</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> </b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> </b></dt><dt class="is-family-code">const char*<b> </b></dt></dl><h3 id="D4341186D76745D3"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D4341186D76745D3">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateIntCast</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">bool</span> isSigned,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2021">llvm/include/llvm/IR/IRBuilder.h:2021</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">bool<b> isSigned</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="A3684E13B0220E6D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A3684E13B0220E6D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateIntMaxReduce</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src,
    <span class="hljs-keyword">bool</span> IsSigned = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a vector integer max reduction intrinsic of the source vector.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L723">llvm/include/llvm/IR/IRBuilder.h:723</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt><dt class="is-family-code">bool<b> IsSigned</b> = false</dt></dl><h3 id="6E89EC3DAC67DC42"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6E89EC3DAC67DC42">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateIntMinReduce</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src,
    <span class="hljs-keyword">bool</span> IsSigned = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a vector integer min reduction intrinsic of the source vector.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L727">llvm/include/llvm/IR/IRBuilder.h:727</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt><dt class="is-family-code">bool<b> IsSigned</b> = false</dt></dl><h3 id="086FDB993DFE15DB"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#086FDB993DFE15DB">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateIntToPtr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1947">llvm/include/llvm/IR/IRBuilder.h:1947</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="509CE6F614C5C39F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#509CE6F614C5C39F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateIntrinsic</span><span class="hljs-params">(
    Intrinsic::ID ID,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Type*&gt; Types,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* FMFSource = <span class="hljs-literal">nullptr</span>,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create
 a call to intrinsic \p ID with \p args, mangled using \p Types. If\p 
FMFSource is provided, copy fast-math-flags from that instruction to the
 intrinsic.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L885">llvm/include/llvm/IR/IRBuilder.h:885</a></p><h4>Parameters</h4><dl><dt class="is-family-code">Intrinsic::ID<b> ID</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Type*&gt;<b> Types</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> FMFSource</b> = nullptr</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="1301575AFB8D98D8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1301575AFB8D98D8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateInvariantStart</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function"><span class="hljs-params">llvm::ConstantInt</span></span></a><span class="hljs-function"><span class="hljs-params">* Size = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to invariant.start intrinsic. If the pointer isn't i8* it will be converted.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L750">llvm/include/llvm/IR/IRBuilder.h:750</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html">llvm::ConstantInt</a>*<b> Size</b> = nullptr</dt></dl><h3 id="03076AAA45B2B164"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#03076AAA45B2B164">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r2FC30BEF376E44C4.html"><span class="hljs-function">llvm::InvokeInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateInvoke</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* NormalDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* UnwindDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args = None,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1058">llvm/include/llvm/IR/IRBuilder.h:1058</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> NormalDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> UnwindDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b> = None</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="BEE81C1204AB3C99"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BEE81C1204AB3C99">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r2FC30BEF376E44C4.html"><span class="hljs-function">llvm::InvokeInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateInvoke</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionType</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* NormalDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* UnwindDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::OperandBundleDef&gt; OpBundles,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create an invoke instruction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1028">llvm/include/llvm/IR/IRBuilder.h:1028</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html">llvm::FunctionType</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> NormalDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> UnwindDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::OperandBundleDef&gt;<b> OpBundles</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="7E7346E7EC9CC6A3"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7E7346E7EC9CC6A3">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r2FC30BEF376E44C4.html"><span class="hljs-function">llvm::InvokeInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateInvoke</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionCallee</span></span></a><span class="hljs-function"><span class="hljs-params"> Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* NormalDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* UnwindDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::OperandBundleDef&gt; OpBundles,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1050">llvm/include/llvm/IR/IRBuilder.h:1050</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rD241AEB7BC9E92EB.html">llvm::FunctionCallee</a><b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> NormalDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> UnwindDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::OperandBundleDef&gt;<b> OpBundles</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="5D6879DD4309D1A0"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5D6879DD4309D1A0">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r2FC30BEF376E44C4.html"><span class="hljs-function">llvm::InvokeInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateInvoke</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html"><span class="hljs-function"><span class="hljs-params">llvm::FunctionType</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Callee,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* NormalDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* UnwindDest,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Args = None,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1039">llvm/include/llvm/IR/IRBuilder.h:1039</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC1FD9EFFA70C10FE.html">llvm::FunctionType</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Callee</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> NormalDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> UnwindDest</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Args</b> = None</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="87A15419BD63E5E4"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#87A15419BD63E5E4">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateIsNeg</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Arg,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Return a boolean value testing if \p Arg &lt; 0.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2370">llvm/include/llvm/IR/IRBuilder.h:2370</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Arg</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="BF72FFBDDD93029A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BF72FFBDDD93029A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateIsNotNeg</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Arg,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Return a boolean value testing if \p Arg &gt; -1.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2375">llvm/include/llvm/IR/IRBuilder.h:2375</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Arg</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="8D75361800B066F3"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8D75361800B066F3">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateIsNotNull</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Arg,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Return a boolean value testing if \p Arg != 0.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2365">llvm/include/llvm/IR/IRBuilder.h:2365</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Arg</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="4A0EBEB9114A1CC9"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4A0EBEB9114A1CC9">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateIsNull</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Arg,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Return a boolean value testing if \p Arg == 0.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2360">llvm/include/llvm/IR/IRBuilder.h:2360</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Arg</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="A73D211F670EE57A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A73D211F670EE57A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateLShr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> isExact = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1310">llvm/include/llvm/IR/IRBuilder.h:1310</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> isExact</b> = false</dt></dl><h3 id="32E915DAA9E3C4D3"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#32E915DAA9E3C4D3">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateLShr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html"><span class="hljs-function"><span class="hljs-params">llvm::APInt</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> isExact = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1319">llvm/include/llvm/IR/IRBuilder.h:1319</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html">llvm::APInt</a>&amp;<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> isExact</b> = false</dt></dl><h3 id="1D3043F2BF557502"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1D3043F2BF557502">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateLShr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">uint64_t</span> RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> isExact = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1324">llvm/include/llvm/IR/IRBuilder.h:1324</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">uint64_t<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> isExact</b> = false</dt></dl><h3 id="F0517B592D9F98EF"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F0517B592D9F98EF">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r636A9D76E9BA3DBB.html"><span class="hljs-function">llvm::LandingPadInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateLandingPad</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> NumClauses,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2346">llvm/include/llvm/IR/IRBuilder.h:2346</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code">unsigned int<b> NumClauses</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="C0562CD0DFCA8413"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C0562CD0DFCA8413">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateLaunderInvariantGroup</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr)</span></span></code></pre></h3><h4>Description</h4><p>Create
 a launder.invariant.group intrinsic call. If Ptr type is different from
 pointer to i8, it's casted to pointer to i8 in the same address space 
before call and casted back to Ptr type after call.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2392">llvm/include/llvm/IR/IRBuilder.h:2392</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt></dl><h3 id="8A0550069C6BB6BE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8A0550069C6BB6BE">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateLifetimeEnd</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function"><span class="hljs-params">llvm::ConstantInt</span></span></a><span class="hljs-function"><span class="hljs-params">* Size = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a lifetime.end intrinsic. If the pointer isn't i8* it will be converted.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L745">llvm/include/llvm/IR/IRBuilder.h:745</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html">llvm::ConstantInt</a>*<b> Size</b> = nullptr</dt></dl><h3 id="BFE49638AA09FD8B"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BFE49638AA09FD8B">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateLifetimeStart</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function"><span class="hljs-params">llvm::ConstantInt</span></span></a><span class="hljs-function"><span class="hljs-params">* Size = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a lifetime.start intrinsic. If the pointer isn't i8* it will be converted.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L740">llvm/include/llvm/IR/IRBuilder.h:740</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html">llvm::ConstantInt</a>*<b> Size</b> = nullptr</dt></dl><h3 id="3493287CE97DBBDC"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3493287CE97DBBDC">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r537857E9FE6D2795.html"><span class="hljs-function">llvm::LoadInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateLoad</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1653">llvm/include/llvm/IR/IRBuilder.h:1653</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="95890BB3F7499B3E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#95890BB3F7499B3E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r537857E9FE6D2795.html"><span class="hljs-function">llvm::LoadInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateLoad</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">bool</span> isVolatile,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1657">llvm/include/llvm/IR/IRBuilder.h:1657</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">bool<b> isVolatile</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="980ECE9A4C0D779E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#980ECE9A4C0D779E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r537857E9FE6D2795.html"><span class="hljs-function">llvm::LoadInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateLoad</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
                           </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
                           <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* Name)</span></span></code></pre></h3><h4>Description</h4><p>Provided
 to resolve 'CreateLoad(Ty, Ptr, "...")' correctly, instead of 
converting the string to 'bool' for the isVolatile parameter.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1649">llvm/include/llvm/IR/IRBuilder.h:1649</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">const char*<b> Name</b></dt></dl><h3 id="4D362D1760A651B5"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4D362D1760A651B5">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateLogicalAnd</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Cond1,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Cond2,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1548">llvm/include/llvm/IR/IRBuilder.h:1548</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Cond1</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Cond2</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="EC78B87D4113AF1B"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#EC78B87D4113AF1B">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateLogicalOr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Ops)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1561">llvm/include/llvm/IR/IRBuilder.h:1561</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Ops</b></dt></dl><h3 id="7FDFDE311A3A83FD"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7FDFDE311A3A83FD">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateLogicalOr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Cond1,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Cond2,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1554">llvm/include/llvm/IR/IRBuilder.h:1554</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Cond1</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Cond2</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="59CD6AB4738A692E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#59CD6AB4738A692E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMaskedGather</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptrs,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html"><span class="hljs-function"><span class="hljs-params">llvm::Align</span></span></a><span class="hljs-function"><span class="hljs-params"> Alignment,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Mask = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* PassThru = <span class="hljs-literal">nullptr</span>,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to Masked Gather intrinsic</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L761">llvm/include/llvm/IR/IRBuilder.h:761</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptrs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html">llvm::Align</a><b> Alignment</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Mask</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> PassThru</b> = nullptr</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="5CA05692072FB065"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5CA05692072FB065">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMaskedIntrinsic</span><span class="hljs-params">(
    Intrinsic::ID Id,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Ops,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Type*&gt; OverloadedTypes,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to a masked intrinsic with given Id.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L935">llvm/include/llvm/IR/IRBuilder.h:935</a></p><h4>Parameters</h4><dl><dt class="is-family-code">Intrinsic::ID<b> Id</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Ops</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Type*&gt;<b> OverloadedTypes</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="B7644CA93CAB7C7C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B7644CA93CAB7C7C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMaskedLoad</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html"><span class="hljs-function"><span class="hljs-params">llvm::Align</span></span></a><span class="hljs-function"><span class="hljs-params"> Alignment,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Mask,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* PassThru = <span class="hljs-literal">nullptr</span>,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to Masked Load intrinsic</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L753">llvm/include/llvm/IR/IRBuilder.h:753</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html">llvm::Align</a><b> Alignment</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Mask</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> PassThru</b> = nullptr</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="D0E3D3293B15A53A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D0E3D3293B15A53A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMaskedScatter</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptrs,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html"><span class="hljs-function"><span class="hljs-params">llvm::Align</span></span></a><span class="hljs-function"><span class="hljs-params"> Alignment,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Mask = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to Masked Scatter intrinsic</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L766">llvm/include/llvm/IR/IRBuilder.h:766</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptrs</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html">llvm::Align</a><b> Alignment</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Mask</b> = nullptr</dt></dl><h3 id="7D2C004CAB85B5E3"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7D2C004CAB85B5E3">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMaskedStore</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html"><span class="hljs-function"><span class="hljs-params">llvm::Align</span></span></a><span class="hljs-function"><span class="hljs-params"> Alignment,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Mask)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to Masked Store intrinsic</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L757">llvm/include/llvm/IR/IRBuilder.h:757</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC036793DBF3FCD9B.html">llvm::Align</a><b> Alignment</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Mask</b></dt></dl><h3 id="01177C48F74462E9"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#01177C48F74462E9">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMaxNum</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create call to the maxnum intrinsic.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L896">llvm/include/llvm/IR/IRBuilder.h:896</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="31C97DC07A949E67"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#31C97DC07A949E67">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMaximum</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create call to the maximum intrinsic.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L906">llvm/include/llvm/IR/IRBuilder.h:906</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="7EE5B24A37DD3C7B"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7EE5B24A37DD3C7B">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMemCpy</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Dst,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> DstAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> SrcAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Size,
    <span class="hljs-keyword">bool</span> isVolatile = <span class="hljs-literal">false</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAAStructTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L633">llvm/include/llvm/IR/IRBuilder.h:633</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Dst</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> DstAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> SrcAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Size</b></dt><dt class="is-family-code">bool<b> isVolatile</b> = false</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAAStructTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="0902C277C535367C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0902C277C535367C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMemCpy</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Dst,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> DstAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> SrcAlign,
    <span class="hljs-keyword">uint64_t</span> Size,
    <span class="hljs-keyword">bool</span> isVolatile = <span class="hljs-literal">false</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAAStructTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create
 and insert a memcpy between the specified pointers. If the pointers 
aren't i8*, they will be converted.  If a TBAA tag is specified, it will
 be added to the instruction. Likewise with alias.scope and noalias 
tags.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L616">llvm/include/llvm/IR/IRBuilder.h:616</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Dst</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> DstAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> SrcAlign</b></dt><dt class="is-family-code">uint64_t<b> Size</b></dt><dt class="is-family-code">bool<b> isVolatile</b> = false</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAAStructTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="1E4D4C7D6DA5646F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1E4D4C7D6DA5646F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMemCpyInline</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Dst,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> DstAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> SrcAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Size,
    <span class="hljs-keyword">bool</span> IsVolatile = <span class="hljs-literal">false</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAAStructTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L645">llvm/include/llvm/IR/IRBuilder.h:645</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Dst</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> DstAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> SrcAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Size</b></dt><dt class="is-family-code">bool<b> IsVolatile</b> = false</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAAStructTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="8B1FFF9B8A44749A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8B1FFF9B8A44749A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMemMove</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Dst,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> DstAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> SrcAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Size,
    <span class="hljs-keyword">bool</span> isVolatile = <span class="hljs-literal">false</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L673">llvm/include/llvm/IR/IRBuilder.h:673</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Dst</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> DstAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> SrcAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Size</b></dt><dt class="is-family-code">bool<b> isVolatile</b> = false</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="0A8C51A8EB6FDDE8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0A8C51A8EB6FDDE8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMemMove</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Dst,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> DstAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> SrcAlign,
    <span class="hljs-keyword">uint64_t</span> Size,
    <span class="hljs-keyword">bool</span> isVolatile = <span class="hljs-literal">false</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L664">llvm/include/llvm/IR/IRBuilder.h:664</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Dst</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> DstAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> SrcAlign</b></dt><dt class="is-family-code">uint64_t<b> Size</b></dt><dt class="is-family-code">bool<b> isVolatile</b> = false</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="8E28E5AB86B3872E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8E28E5AB86B3872E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMemSet</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    <span class="hljs-keyword">uint64_t</span> Size,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> Align,
    <span class="hljs-keyword">bool</span> isVolatile = <span class="hljs-literal">false</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create
 and insert a memset to the specified pointer and the specified value. 
If the pointer isn't an i8*, it will be converted. If a TBAA tag is 
specified, it will be added to the instruction. Likewise with 
alias.scope and noalias tags.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L568">llvm/include/llvm/IR/IRBuilder.h:568</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code">uint64_t<b> Size</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> Align</b></dt><dt class="is-family-code">bool<b> isVolatile</b> = false</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="B50FF94C7A789837"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B50FF94C7A789837">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMemSet</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Size,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> Align,
    <span class="hljs-keyword">bool</span> isVolatile = <span class="hljs-literal">false</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L576">llvm/include/llvm/IR/IRBuilder.h:576</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Size</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> Align</b></dt><dt class="is-family-code">bool<b> isVolatile</b> = false</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="17247D1FA879A83A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#17247D1FA879A83A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMemSetInline</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Dst,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> DstAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Size,
    <span class="hljs-keyword">bool</span> IsVolatile = <span class="hljs-literal">false</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L581">llvm/include/llvm/IR/IRBuilder.h:581</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Dst</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> DstAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Size</b></dt><dt class="is-family-code">bool<b> IsVolatile</b> = false</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="F1D3FA5EE142A52F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F1D3FA5EE142A52F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMemTransferInst</span><span class="hljs-params">(
    Intrinsic::ID IntrID,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Dst,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> DstAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html"><span class="hljs-function"><span class="hljs-params">llvm::MaybeAlign</span></span></a><span class="hljs-function"><span class="hljs-params"> SrcAlign,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Size,
    <span class="hljs-keyword">bool</span> isVolatile = <span class="hljs-literal">false</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAATag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* TBAAStructTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* NoAliasTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L627">llvm/include/llvm/IR/IRBuilder.h:627</a></p><h4>Parameters</h4><dl><dt class="is-family-code">Intrinsic::ID<b> IntrID</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Dst</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> DstAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rAAA41DF357B863FF.html">llvm::MaybeAlign</a><b> SrcAlign</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Size</b></dt><dt class="is-family-code">bool<b> isVolatile</b> = false</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAATag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> TBAAStructTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> NoAliasTag</b> = nullptr</dt></dl><h3 id="43C77A801709D1AB"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#43C77A801709D1AB">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMinNum</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create call to the minnum intrinsic.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L891">llvm/include/llvm/IR/IRBuilder.h:891</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="6050237CF760FF0D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6050237CF760FF0D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMinimum</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create call to the minimum intrinsic.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L901">llvm/include/llvm/IR/IRBuilder.h:901</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="973A0EDAE21A1091"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#973A0EDAE21A1091">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateMul</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> HasNUW = <span class="hljs-literal">false</span>,
    <span class="hljs-keyword">bool</span> HasNSW = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1234">llvm/include/llvm/IR/IRBuilder.h:1234</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> HasNUW</b> = false</dt><dt class="is-family-code">bool<b> HasNSW</b> = false</dt></dl><h3 id="D6D92985FEBDDDC1"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D6D92985FEBDDDC1">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateMulReduce</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src)</span></span></code></pre></h3><h4>Description</h4><p>Create a vector int mul reduction intrinsic of the source vector.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L710">llvm/include/llvm/IR/IRBuilder.h:710</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt></dl><h3 id="74845EAF21096997"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#74845EAF21096997">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateNAryOp</span><span class="hljs-params">(
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Opc,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Ops,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create either a UnaryOperator or BinaryOperator depending on \p Opc. Correct number of operands must be passed accordingly.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1625">llvm/include/llvm/IR/IRBuilder.h:1625</a></p><h4>Parameters</h4><dl><dt class="is-family-code">unsigned int<b> Opc</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Ops</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="42249D1476752D39"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#42249D1476752D39">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateNSWAdd</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1209">llvm/include/llvm/IR/IRBuilder.h:1209</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="0D84A219DC5F7E73"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0D84A219DC5F7E73">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateNSWMul</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1243">llvm/include/llvm/IR/IRBuilder.h:1243</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="AF49A9AE872A8988"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#AF49A9AE872A8988">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateNSWNeg</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1581">llvm/include/llvm/IR/IRBuilder.h:1581</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="4D91A593A7DFDF1A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4D91A593A7DFDF1A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateNSWSub</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1226">llvm/include/llvm/IR/IRBuilder.h:1226</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="F0C94416E7908B59"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F0C94416E7908B59">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateNUWAdd</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1213">llvm/include/llvm/IR/IRBuilder.h:1213</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="86E1254B67AAAEC5"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#86E1254B67AAAEC5">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateNUWMul</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1247">llvm/include/llvm/IR/IRBuilder.h:1247</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="1807A49C436A761F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1807A49C436A761F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateNUWNeg</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1585">llvm/include/llvm/IR/IRBuilder.h:1585</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="267811E71E81825D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#267811E71E81825D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateNUWSub</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1230">llvm/include/llvm/IR/IRBuilder.h:1230</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="0F250127CD8AC6DA"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0F250127CD8AC6DA">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateNeg</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> HasNUW = <span class="hljs-literal">false</span>,
    <span class="hljs-keyword">bool</span> HasNSW = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1575">llvm/include/llvm/IR/IRBuilder.h:1575</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> HasNUW</b> = false</dt><dt class="is-family-code">bool<b> HasNSW</b> = false</dt></dl><h3 id="14313317C51952F8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#14313317C51952F8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function">llvm::Instruction</span></a><span class="hljs-function">* <span class="hljs-title">CreateNoAliasScopeDeclaration</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* ScopeTag)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L779">llvm/include/llvm/IR/IRBuilder.h:779</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> ScopeTag</b></dt></dl><h3 id="BFB5E762715C7DCE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BFB5E762715C7DCE">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function">llvm::Instruction</span></a><span class="hljs-function">* <span class="hljs-title">CreateNoAliasScopeDeclaration</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Scope)</span></span></code></pre></h3><h4>Description</h4><p>Create a llvm.experimental.noalias.scope.decl intrinsic call.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L778">llvm/include/llvm/IR/IRBuilder.h:778</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Scope</b></dt></dl><h3 id="9A02C31D85B26F12"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9A02C31D85B26F12">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateNot</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1608">llvm/include/llvm/IR/IRBuilder.h:1608</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="462CE13BAE129DC7"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#462CE13BAE129DC7">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateOr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1370">llvm/include/llvm/IR/IRBuilder.h:1370</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="D5DA2247FFB9C8A4"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D5DA2247FFB9C8A4">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateOr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html"><span class="hljs-function"><span class="hljs-params">llvm::APInt</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1376">llvm/include/llvm/IR/IRBuilder.h:1376</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html">llvm::APInt</a>&amp;<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="08F86857A072EC02"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#08F86857A072EC02">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateOr</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::Value*&gt; Ops)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1384">llvm/include/llvm/IR/IRBuilder.h:1384</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::Value*&gt;<b> Ops</b></dt></dl><h3 id="F6EB20CDBCE7DB5A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F6EB20CDBCE7DB5A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateOr</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">uint64_t</span> RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1380">llvm/include/llvm/IR/IRBuilder.h:1380</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">uint64_t<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="ED57BDFF1BB3A36D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#ED57BDFF1BB3A36D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateOrReduce</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src)</span></span></code></pre></h3><h4>Description</h4><p>Create a vector int OR reduction intrinsic of the source vector.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L716">llvm/include/llvm/IR/IRBuilder.h:716</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt></dl><h3 id="5C93EAE246E76072"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5C93EAE246E76072">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r33A490E798BA8C33.html"><span class="hljs-function">llvm::PHINode</span></a><span class="hljs-function">* <span class="hljs-title">CreatePHI</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> NumReservedValues,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2221">llvm/include/llvm/IR/IRBuilder.h:2221</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code">unsigned int<b> NumReservedValues</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="D75866098E8F28D6"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D75866098E8F28D6">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreatePointerBitCastOrAddrSpaceCast</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2007">llvm/include/llvm/IR/IRBuilder.h:2007</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="C84EF4C90567C6F9"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C84EF4C90567C6F9">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreatePointerCast</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1998">llvm/include/llvm/IR/IRBuilder.h:1998</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="A7811AAD742AD4BB"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A7811AAD742AD4BB">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreatePreserveArrayAccessIndex</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* ElTy,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Base,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Dimension,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> LastIndex,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* DbgInfo)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2425">llvm/include/llvm/IR/IRBuilder.h:2425</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> ElTy</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Base</b></dt><dt class="is-family-code">unsigned int<b> Dimension</b></dt><dt class="is-family-code">unsigned int<b> LastIndex</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> DbgInfo</b></dt></dl><h3 id="23642E9B3A114B54"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#23642E9B3A114B54">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreatePreserveStructAccessIndex</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* ElTy,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Base,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Index,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> FieldIndex,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* DbgInfo)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2432">llvm/include/llvm/IR/IRBuilder.h:2432</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> ElTy</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Base</b></dt><dt class="is-family-code">unsigned int<b> Index</b></dt><dt class="is-family-code">unsigned int<b> FieldIndex</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> DbgInfo</b></dt></dl><h3 id="93C69A846AA178EC"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#93C69A846AA178EC">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreatePreserveUnionAccessIndex</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Base,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> FieldIndex,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* DbgInfo)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2429">llvm/include/llvm/IR/IRBuilder.h:2429</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Base</b></dt><dt class="is-family-code">unsigned int<b> FieldIndex</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> DbgInfo</b></dt></dl><h3 id="D840B592054D3CBB"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D840B592054D3CBB">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreatePtrDiff</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* ElemTy,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Return
 the i64 difference between two pointer values, dividing out the size of
 the pointed-to objects. This is intended to implement C-style pointer 
subtraction. As such, the pointers must be appropriately aligned for 
their element types and pointing into the same object.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2386">llvm/include/llvm/IR/IRBuilder.h:2386</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> ElemTy</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="D6D52DC1D9F5249D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D6D52DC1D9F5249D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreatePtrToInt</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1942">llvm/include/llvm/IR/IRBuilder.h:1942</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="7F2B1BD45ED2D223"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7F2B1BD45ED2D223">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r8CD66E43DF6EFC10.html"><span class="hljs-function">llvm::ResumeInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateResume</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Exn)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1102">llvm/include/llvm/IR/IRBuilder.h:1102</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Exn</b></dt></dl><h3 id="926ADBB557B907B4"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#926ADBB557B907B4">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE3FCDA044CB15AAD.html"><span class="hljs-function">llvm::ReturnInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateRet</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V)</span></span></code></pre></h3><h4>Description</h4><p>Create a 'ret  &lt;val &gt;' instruction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L965">llvm/include/llvm/IR/IRBuilder.h:965</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt></dl><h3 id="FCF5D962081BBD0C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#FCF5D962081BBD0C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE3FCDA044CB15AAD.html"><span class="hljs-function">llvm::ReturnInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateRetVoid</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Create a 'ret void' instruction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L960">llvm/include/llvm/IR/IRBuilder.h:960</a></p><h3 id="5BD5C3A766253115"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5BD5C3A766253115">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateSDiv</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> isExact = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1264">llvm/include/llvm/IR/IRBuilder.h:1264</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> isExact</b> = false</dt></dl><h3 id="07F38AB7A724F65F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#07F38AB7A724F65F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateSExt</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1864">llvm/include/llvm/IR/IRBuilder.h:1864</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="A9B3BCFD50B2E7E6"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A9B3BCFD50B2E7E6">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateSExtOrBitCast</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1971">llvm/include/llvm/IR/IRBuilder.h:1971</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="414F839FCEF45156"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#414F839FCEF45156">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateSExtOrTrunc</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a SExt or Trunc from the integer value V to DestTy. Return the value untouched if the type of V is already DestTy.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1885">llvm/include/llvm/IR/IRBuilder.h:1885</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="5CABBDBD2180DC9E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5CABBDBD2180DC9E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateSIToFP</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1919">llvm/include/llvm/IR/IRBuilder.h:1919</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="2D6DD93A872F7460"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2D6DD93A872F7460">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateSRem</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1283">llvm/include/llvm/IR/IRBuilder.h:1283</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="92FB100E5F2843D6"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#92FB100E5F2843D6">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateSelect</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* C,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* True,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* False,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* MDFrom = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2269">llvm/include/llvm/IR/IRBuilder.h:2269</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> C</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> True</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> False</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> MDFrom</b> = nullptr</dt></dl><h3 id="0C67785E79386233"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0C67785E79386233">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateShl</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">uint64_t</span> RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> HasNUW = <span class="hljs-literal">false</span>,
    <span class="hljs-keyword">bool</span> HasNSW = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1304">llvm/include/llvm/IR/IRBuilder.h:1304</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">uint64_t<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> HasNUW</b> = false</dt><dt class="is-family-code">bool<b> HasNSW</b> = false</dt></dl><h3 id="5EEFFB2B6D961BB4"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5EEFFB2B6D961BB4">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateShl</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html"><span class="hljs-function"><span class="hljs-params">llvm::APInt</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> HasNUW = <span class="hljs-literal">false</span>,
    <span class="hljs-keyword">bool</span> HasNSW = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1298">llvm/include/llvm/IR/IRBuilder.h:1298</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html">llvm::APInt</a>&amp;<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> HasNUW</b> = false</dt><dt class="is-family-code">bool<b> HasNSW</b> = false</dt></dl><h3 id="4CC52FC2C03BD581"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4CC52FC2C03BD581">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateShl</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> HasNUW = <span class="hljs-literal">false</span>,
    <span class="hljs-keyword">bool</span> HasNSW = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1289">llvm/include/llvm/IR/IRBuilder.h:1289</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> HasNUW</b> = false</dt><dt class="is-family-code">bool<b> HasNSW</b> = false</dt></dl><h3 id="004CD4D1719740C6"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#004CD4D1719740C6">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateShuffleVector</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V1,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V2,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Mask,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2310">llvm/include/llvm/IR/IRBuilder.h:2310</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V1</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V2</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Mask</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="E44BB67A81BBB0F6"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E44BB67A81BBB0F6">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateShuffleVector</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;<span class="hljs-keyword">int</span>&gt; Mask,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a unary shuffle. The second vector operand of the IR instruction is poison.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2327">llvm/include/llvm/IR/IRBuilder.h:2327</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;int&gt;<b> Mask</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="53CB18A1A672B166"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#53CB18A1A672B166">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateShuffleVector</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V1,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V2,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;<span class="hljs-keyword">int</span>&gt; Mask,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>See class ShuffleVectorInst for a description of the mask representation.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2318">llvm/include/llvm/IR/IRBuilder.h:2318</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V1</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V2</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;int&gt;<b> Mask</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="CCF2E0139648DF6C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CCF2E0139648DF6C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateStepVector</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DstType,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Creates a vector of type \p DstType with the linear sequence  &lt; 0, 1, ...&gt;</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L868">llvm/include/llvm/IR/IRBuilder.h:868</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DstType</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="82A7A41D237C3B5E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#82A7A41D237C3B5E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r9139824E2B7B4B8F.html"><span class="hljs-function">llvm::StoreInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateStore</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Val,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">bool</span> isVolatile = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1662">llvm/include/llvm/IR/IRBuilder.h:1662</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Val</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">bool<b> isVolatile</b> = false</dt></dl><h3 id="3CA341300A4D283D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3CA341300A4D283D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateStripInvariantGroup</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr)</span></span></code></pre></h3><h4>Description</h4><p>Create
 a strip.invariant.group intrinsic call. If Ptr type is different from 
pointer to i8, it's casted to pointer to i8 in the same address space 
before call and casted back to Ptr type after call.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2397">llvm/include/llvm/IR/IRBuilder.h:2397</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt></dl><h3 id="82F967A2A4B62548"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#82F967A2A4B62548">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateStructGEP</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Idx,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1832">llvm/include/llvm/IR/IRBuilder.h:1832</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt><dt class="is-family-code">unsigned int<b> Idx</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="20306F7D6E90EA31"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#20306F7D6E90EA31">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateSub</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> HasNUW = <span class="hljs-literal">false</span>,
    <span class="hljs-keyword">bool</span> HasNSW = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1217">llvm/include/llvm/IR/IRBuilder.h:1217</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> HasNUW</b> = false</dt><dt class="is-family-code">bool<b> HasNSW</b> = false</dt></dl><h3 id="F035014CE9C1E5C8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F035014CE9C1E5C8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r1A6F1C03A3F0DA37.html"><span class="hljs-function">llvm::SwitchInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateSwitch</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* Dest,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> NumCases = <span class="hljs-number">10</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* BranchWeights = <span class="hljs-literal">nullptr</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* Unpredictable = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create
 a switch instruction with the specified value, default dest, and with a
 hint for the number of cases that will be added (for efficient 
allocation).</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1013">llvm/include/llvm/IR/IRBuilder.h:1013</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> Dest</b></dt><dt class="is-family-code">unsigned int<b> NumCases</b> = 10</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> BranchWeights</b> = nullptr</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> Unpredictable</b> = nullptr</dt></dl><h3 id="2EAFA583E19E3993"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2EAFA583E19E3993">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateTrunc</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1856">llvm/include/llvm/IR/IRBuilder.h:1856</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="E181454DE0EA71FD"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E181454DE0EA71FD">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateTruncOrBitCast</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1980">llvm/include/llvm/IR/IRBuilder.h:1980</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="3F3ABEA89D9A9BE3"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3F3ABEA89D9A9BE3">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateUDiv</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    <span class="hljs-keyword">bool</span> isExact = <span class="hljs-literal">false</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1251">llvm/include/llvm/IR/IRBuilder.h:1251</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code">bool<b> isExact</b> = false</dt></dl><h3 id="0B0A3545BBAB1BC1"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0B0A3545BBAB1BC1">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateUIToFP</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1912">llvm/include/llvm/IR/IRBuilder.h:1912</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="24E04A3700F4056D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#24E04A3700F4056D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateURem</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1277">llvm/include/llvm/IR/IRBuilder.h:1277</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="052CD5BA021170AA"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#052CD5BA021170AA">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateUnOp</span><span class="hljs-params">(
    Instruction::UnaryOps Opc,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag = <span class="hljs-literal">nullptr</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1612">llvm/include/llvm/IR/IRBuilder.h:1612</a></p><h4>Parameters</h4><dl><dt class="is-family-code">Instruction::UnaryOps<b> Opc</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b> = nullptr</dt></dl><h3 id="4AD34507FF2D7FFD"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4AD34507FF2D7FFD">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateUnaryIntrinsic</span><span class="hljs-params">(
    Intrinsic::ID ID,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* FMFSource = <span class="hljs-literal">nullptr</span>,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to intrinsic \p ID with 1 operand which is mangled on its type.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L872">llvm/include/llvm/IR/IRBuilder.h:872</a></p><h4>Parameters</h4><dl><dt class="is-family-code">Intrinsic::ID<b> ID</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> FMFSource</b> = nullptr</dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="00CDF91FA60C7809"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#00CDF91FA60C7809">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r1635E4A9D3DC1CAF.html"><span class="hljs-function">llvm::UnreachableInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateUnreachable</span><span class="hljs-params">()</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1133">llvm/include/llvm/IR/IRBuilder.h:1133</a></p><h3 id="C3F0167A489C7AC1"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C3F0167A489C7AC1">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5DCB61802CFF2516.html"><span class="hljs-function">llvm::VAArgInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateVAArg</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* List,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* Ty,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2272">llvm/include/llvm/IR/IRBuilder.h:2272</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> List</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> Ty</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="F46451D7FFC6D6BE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F46451D7FFC6D6BE">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateVScale</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r0CE2309DD94A32FA.html"><span class="hljs-function"><span class="hljs-params">llvm::Constant</span></span></a><span class="hljs-function"><span class="hljs-params">* Scaling,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a call to llvm.vscale, multiplied by \p Scaling. The type of VScale will be the same type as that of \p Scaling.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L865">llvm/include/llvm/IR/IRBuilder.h:865</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r0CE2309DD94A32FA.html">llvm::Constant</a>*<b> Scaling</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="030C365DDA947105"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#030C365DDA947105">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateVectorReverse</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Return a vector value that contains the vector V reversed</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2400">llvm/include/llvm/IR/IRBuilder.h:2400</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="24EF65D20A997020"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#24EF65D20A997020">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateVectorSplat</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rB8F95F51F57D8F81.html"><span class="hljs-function"><span class="hljs-params">llvm::ElementCount</span></span></a><span class="hljs-function"><span class="hljs-params"> EC,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Return a vector value that contains</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2418">llvm/include/llvm/IR/IRBuilder.h:2418</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rB8F95F51F57D8F81.html">llvm::ElementCount</a><b> EC</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="1504CCFC0CD896D8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1504CCFC0CD896D8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateVectorSplat</span><span class="hljs-params">(
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> NumElts,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Return a vector value that contains</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2414">llvm/include/llvm/IR/IRBuilder.h:2414</a></p><h4>Parameters</h4><dl><dt class="is-family-code">unsigned int<b> NumElts</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="80E810FC603298CB"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#80E810FC603298CB">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateVectorSplice</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V1,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V2,
    <span class="hljs-keyword">int64_t</span> Imm,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Return
 a vector splice intrinsic if using scalable vectors, otherwise return a
 shufflevector. If the immediate is positive, a vector is extracted from
 concat(V1, V2), starting at Imm. If the immediate is negative, we 
extract -Imm elements from V1 and the remaining elements from V2. Imm is
 a signed integer in the range -VL  &lt; = Imm  &lt; VL (where VL is the
 runtime vector length of the source/result vector)</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L2409">llvm/include/llvm/IR/IRBuilder.h:2409</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V1</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V2</b></dt><dt class="is-family-code">int64_t<b> Imm</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="B33F1BD91C6F0B20"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B33F1BD91C6F0B20">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateXor</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html"><span class="hljs-function"><span class="hljs-params">llvm::APInt</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1398">llvm/include/llvm/IR/IRBuilder.h:1398</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html">llvm::APInt</a>&amp;<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="77EE167F3FA7A26E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#77EE167F3FA7A26E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateXor</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    <span class="hljs-keyword">uint64_t</span> RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1402">llvm/include/llvm/IR/IRBuilder.h:1402</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code">uint64_t<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="0B7655902564EB95"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0B7655902564EB95">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateXor</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* LHS,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* RHS,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1392">llvm/include/llvm/IR/IRBuilder.h:1392</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> LHS</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> RHS</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="D75EAB020D47306A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D75EAB020D47306A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7343C8EC823E5DC1.html"><span class="hljs-function">llvm::CallInst</span></a><span class="hljs-function">* <span class="hljs-title">CreateXorReduce</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Src)</span></span></code></pre></h3><h4>Description</h4><p>Create a vector int XOR reduction intrinsic of the source vector.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L719">llvm/include/llvm/IR/IRBuilder.h:719</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Src</b></dt></dl><h3 id="99321A613DA28017"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#99321A613DA28017">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateZExt</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1860">llvm/include/llvm/IR/IRBuilder.h:1860</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="D60B60A1C8126747"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D60B60A1C8126747">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateZExtOrBitCast</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1962">llvm/include/llvm/IR/IRBuilder.h:1962</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="E0651DECEF48105A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E0651DECEF48105A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">CreateZExtOrTrunc</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function"><span class="hljs-params">llvm::Type</span></span></a><span class="hljs-function"><span class="hljs-params">* DestTy,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span></span></code></pre></h3><h4>Description</h4><p>Create a ZExt or Trunc from the integer value V to DestTy. Return the value untouched if the type of V is already DestTy.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1870">llvm/include/llvm/IR/IRBuilder.h:1870</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html">llvm::Type</a>*<b> DestTy</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="725D1346BA95E1E5"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#725D1346BA95E1E5">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function">llvm::BasicBlock</span></a><span class="hljs-function">* <span class="hljs-title">GetInsertBlock</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L173">llvm/include/llvm/IR/IRBuilder.h:173</a></p><h3 id="6DF0E7408D0441A8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6DF0E7408D0441A8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r360F37E943D71FA0.html"><span class="hljs-function">BasicBlock::iterator</span></a><span class="hljs-function"> <span class="hljs-title">GetInsertPoint</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L174">llvm/include/llvm/IR/IRBuilder.h:174</a></p><h3 id="E39514368069D39D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E39514368069D39D">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-built_in">IRBuilderBase</span>(
    <a href="https://docs.hdoc.io/hdoc/llvm-project/rB8F46D3CD599E2BD.html">llvm::LLVMContext</a>&amp; context,
    <span class="hljs-keyword">const</span> <a href="https://docs.hdoc.io/hdoc/llvm-project/r037E035A93C2BFED.html">llvm::IRBuilderFolder</a>&amp; Folder,
    <span class="hljs-keyword">const</span> <a href="https://docs.hdoc.io/hdoc/llvm-project/r711847BDF35F862C.html">llvm::IRBuilderDefaultInserter</a>&amp;
        Inserter,
    <a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>* FPMathTag,
    <a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::OperandBundleDef&gt; OpBundles)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L134">llvm/include/llvm/IR/IRBuilder.h:134</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rB8F46D3CD599E2BD.html">llvm::LLVMContext</a>&amp;<b> context</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r037E035A93C2BFED.html">llvm::IRBuilderFolder</a>&amp;<b> Folder</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r711847BDF35F862C.html">llvm::IRBuilderDefaultInserter</a>&amp;<b> Inserter</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::OperandBundleDef&gt;<b> OpBundles</b></dt></dl><h3 id="7B1288A37BBE5C37"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7B1288A37BBE5C37">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> InstTy&gt;
<span class="hljs-function">InstTy* <span class="hljs-title">Insert</span><span class="hljs-params">(InstTy* I,
               <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span> <span class="hljs-keyword">const</span></span></code></pre></h3><h4>Description</h4><p>Insert and return the specified instruction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L144">llvm/include/llvm/IR/IRBuilder.h:144</a></p><h4>Templates</h4><dl><dt class="is-family-code"><b> InstTy</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">InstTy*<b> I</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="C2A36C19D1CF4598"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C2A36C19D1CF4598">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r0CE2309DD94A32FA.html"><span class="hljs-function">llvm::Constant</span></a><span class="hljs-function">* <span class="hljs-title">Insert</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r0CE2309DD94A32FA.html"><span class="hljs-function"><span class="hljs-params">llvm::Constant</span></span></a><span class="hljs-function"><span class="hljs-params">* C,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; = <span class="hljs-string">""</span>)</span> <span class="hljs-keyword">const</span></span></code></pre></h3><h4>Description</h4><p>No-op overload to handle constants.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L151">llvm/include/llvm/IR/IRBuilder.h:151</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r0CE2309DD94A32FA.html">llvm::Constant</a>*<b> C</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> </b> = ""</dt></dl><h3 id="04A916F2D17F47D7"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#04A916F2D17F47D7">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">Insert</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* V,
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html"><span class="hljs-function"><span class="hljs-params">llvm::Twine</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; Name = <span class="hljs-string">""</span>)</span> <span class="hljs-keyword">const</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L155">llvm/include/llvm/IR/IRBuilder.h:155</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> V</b></dt><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/rA5E25CD0DF0DA048.html">llvm::Twine</a>&amp;<b> Name</b> = ""</dt></dl><h3 id="720FFE6561B1C464"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#720FFE6561B1C464">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetCurrentDebugLocation</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r7D971FB9604CC807.html"><span class="hljs-function"><span class="hljs-params">llvm::DebugLoc</span></span></a><span class="hljs-function"><span class="hljs-params"> L)</span></span></code></pre></h3><h4>Description</h4><p>Set location information used by debugging information.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L203">llvm/include/llvm/IR/IRBuilder.h:203</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7D971FB9604CC807.html">llvm::DebugLoc</a><b> L</b></dt></dl><h3 id="AA68C3B2DDCE5856"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#AA68C3B2DDCE5856">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetInsertPoint</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* TheBB)</span></span></code></pre></h3><h4>Description</h4><p>This specifies that created instructions should be appended to the end of the specified block.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L179">llvm/include/llvm/IR/IRBuilder.h:179</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> TheBB</b></dt></dl><h3 id="A45576B4E7904AC5"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A45576B4E7904AC5">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetInsertPoint</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* I)</span></span></code></pre></h3><h4>Description</h4><p>This specifies that created instructions should be inserted before the specified instruction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L186">llvm/include/llvm/IR/IRBuilder.h:186</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> I</b></dt></dl><h3 id="04C9A8E7B632120C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#04C9A8E7B632120C">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetInsertPoint</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html"><span class="hljs-function"><span class="hljs-params">llvm::BasicBlock</span></span></a><span class="hljs-function"><span class="hljs-params">* TheBB,
                    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r360F37E943D71FA0.html"><span class="hljs-function"><span class="hljs-params">BasicBlock::iterator</span></span></a><span class="hljs-function"><span class="hljs-params"> IP)</span></span></code></pre></h3><h4>Description</h4><p>This specifies that created instructions should be inserted at the specified point.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L195">llvm/include/llvm/IR/IRBuilder.h:195</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r5F23A6FBCC3A87BD.html">llvm::BasicBlock</a>*<b> TheBB</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r360F37E943D71FA0.html">BasicBlock::iterator</a><b> IP</b></dt></dl><h3 id="5F11F760F906E2C6"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5F11F760F906E2C6">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetInstDebugLocation</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* I)</span> <span class="hljs-keyword">const</span></span></code></pre></h3><h4>Description</h4><p>If this builder has a current debug location, set it on the specified instruction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L221">llvm/include/llvm/IR/IRBuilder.h:221</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> I</b></dt></dl><h3 id="AC3AEDC305D12DF9"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#AC3AEDC305D12DF9">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> InstTy&gt;
<span class="hljs-function">InstTy* <span class="hljs-title">addBranchMetadata</span><span class="hljs-params">(
    InstTy* I,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* Weights,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* Unpredictable)</span></span></code></pre></h3><h4>Description</h4><p>Helper to add branch weight and unpredictable metadata onto an instruction.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L950">llvm/include/llvm/IR/IRBuilder.h:950</a></p><h4>Templates</h4><dl><dt class="is-family-code"><b> InstTy</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">InstTy*<b> I</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> Weights</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> Unpredictable</b></dt></dl><h4>Returns</h4><p>The annotated instruction.</p><h3 id="6CE0DAE2765C811E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6CE0DAE2765C811E">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">clearFastMathFlags</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Clear the fast-math flags.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L282">llvm/include/llvm/IR/IRBuilder.h:282</a></p><h3 id="03963CDCC3ACE029"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#03963CDCC3ACE029">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function">llvm::Type</span></a><span class="hljs-function">* <span class="hljs-title">getBFloatTy</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a 16-bit brain floating point value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L524">llvm/include/llvm/IR/IRBuilder.h:524</a></p><h3 id="B5681AAD257C156B"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B5681AAD257C156B">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">getCastedInt8PtrValue</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function"><span class="hljs-params">llvm::Value</span></span></a><span class="hljs-function"><span class="hljs-params">* Ptr)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L939">llvm/include/llvm/IR/IRBuilder.h:939</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html">llvm::Value</a>*<b> Ptr</b></dt></dl><h3 id="3D8EAA4955FA29CE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3D8EAA4955FA29CE">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">getConstrainedFPExcept</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;fp::ExceptionBehavior&gt; Except)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1174">llvm/include/llvm/IR/IRBuilder.h:1174</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;fp::ExceptionBehavior&gt;<b> Except</b></dt></dl><h3 id="6F0347DB4E8E1469"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6F0347DB4E8E1469">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">getConstrainedFPPredicate</span><span class="hljs-params">(
    CmpInst::Predicate Predicate)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1187">llvm/include/llvm/IR/IRBuilder.h:1187</a></p><h4>Parameters</h4><dl><dt class="is-family-code">CmpInst::Predicate<b> Predicate</b></dt></dl><h3 id="22DC2FA5AD24578B"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#22DC2FA5AD24578B">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4EC65655F3BC4E59.html"><span class="hljs-function">llvm::Value</span></a><span class="hljs-function">* <span class="hljs-title">getConstrainedFPRounding</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html"><span class="hljs-function"><span class="hljs-params">Optional</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::RoundingMode&gt; Rounding)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1161">llvm/include/llvm/IR/IRBuilder.h:1161</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r6607998C23E31109.html">Optional</a>&lt;llvm::RoundingMode&gt;<b> Rounding</b></dt></dl><h3 id="B9F1EEBA7E4DCA86"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B9F1EEBA7E4DCA86">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rB8F46D3CD599E2BD.html"><span class="hljs-function">llvm::LLVMContext</span></a><span class="hljs-function">&amp; <span class="hljs-title">getContext</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L175">llvm/include/llvm/IR/IRBuilder.h:175</a></p><h3 id="DDF9C8FEC459C527"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DDF9C8FEC459C527">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r7D971FB9604CC807.html"><span class="hljs-function">llvm::DebugLoc</span></a><span class="hljs-function"> <span class="hljs-title">getCurrentDebugLocation</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span></code></pre></h3><h4>Description</h4><p>Get location information used by debugging information.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L217">llvm/include/llvm/IR/IRBuilder.h:217</a></p><h3 id="55A2246E8788497C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#55A2246E8788497C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function">llvm::Type</span></a><span class="hljs-function">* <span class="hljs-title">getCurrentFunctionReturnType</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span></code></pre></h3><h4>Description</h4><p>Get the return type of the current function that we're emitting into.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L231">llvm/include/llvm/IR/IRBuilder.h:231</a></p><h3 id="78352E0155705AB6"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#78352E0155705AB6">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function">fp::ExceptionBehavior
<span class="hljs-title">getDefaultConstrainedExcept</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Get the exception handling used with constrained floating point</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L318">llvm/include/llvm/IR/IRBuilder.h:318</a></p><h3 id="476D6B2C70BA25FC"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#476D6B2C70BA25FC">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function">llvm::RoundingMode <span class="hljs-title">getDefaultConstrainedRounding</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Get the rounding mode handling used with constrained floating point</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L323">llvm/include/llvm/IR/IRBuilder.h:323</a></p><h3 id="39F7E1688E9E34C3"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#39F7E1688E9E34C3">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function">llvm::MDNode</span></a><span class="hljs-function">* <span class="hljs-title">getDefaultFPMathTag</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span></code></pre></h3><h4>Description</h4><p>Get the floating point math metadata being used.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L274">llvm/include/llvm/IR/IRBuilder.h:274</a></p><h3 id="D1FCBDA248FCA572"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D1FCBDA248FCA572">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function">llvm::Type</span></a><span class="hljs-function">* <span class="hljs-title">getDoubleTy</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a 64-bit floating point value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L534">llvm/include/llvm/IR/IRBuilder.h:534</a></p><h3 id="07198F0AB3182EED"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#07198F0AB3182EED">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function">llvm::ConstantInt</span></a><span class="hljs-function">* <span class="hljs-title">getFalse</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Get the constant value for i1 false.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L446">llvm/include/llvm/IR/IRBuilder.h:446</a></p><h3 id="A2FC54ECD9964FAF"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A2FC54ECD9964FAF">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rB015E228FFC78DC5.html"><span class="hljs-function">llvm::FastMathFlags</span></a><span class="hljs-function"> <span class="hljs-title">getFastMathFlags</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span></code></pre></h3><h4>Description</h4><p>Get the flags to be applied to created floating point ops</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L277">llvm/include/llvm/IR/IRBuilder.h:277</a></p><h3 id="B02A838C5DDA7714"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B02A838C5DDA7714">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rB015E228FFC78DC5.html"><span class="hljs-function">llvm::FastMathFlags</span></a><span class="hljs-function">&amp; <span class="hljs-title">getFastMathFlags</span><span class="hljs-params">()</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L279">llvm/include/llvm/IR/IRBuilder.h:279</a></p><h3 id="02AAE5DB1BE86E9D"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#02AAE5DB1BE86E9D">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function">llvm::Type</span></a><span class="hljs-function">* <span class="hljs-title">getFloatTy</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a 32-bit floating point value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L529">llvm/include/llvm/IR/IRBuilder.h:529</a></p><h3 id="121886A0ED92742E"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#121886A0ED92742E">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function">llvm::Type</span></a><span class="hljs-function">* <span class="hljs-title">getHalfTy</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a 16-bit floating point value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L519">llvm/include/llvm/IR/IRBuilder.h:519</a></p><h3 id="2251C613AA60C1CD"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2251C613AA60C1CD">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function">llvm::ConstantInt</span></a><span class="hljs-function">* <span class="hljs-title">getInt</span><span class="hljs-params">(<span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html"><span class="hljs-function"><span class="hljs-params">llvm::APInt</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; AI)</span></span></code></pre></h3><h4>Description</h4><p>Get a constant integer value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L477">llvm/include/llvm/IR/IRBuilder.h:477</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r50D306F9F4C3FD25.html">llvm::APInt</a>&amp;<b> AI</b></dt></dl><h3 id="135D7220988EB8F5"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#135D7220988EB8F5">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function">llvm::ConstantInt</span></a><span class="hljs-function">* <span class="hljs-title">getInt1</span><span class="hljs-params">(<span class="hljs-keyword">bool</span> V)</span></span></code></pre></h3><h4>Description</h4><p>Get a constant value representing either true or false.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L436">llvm/include/llvm/IR/IRBuilder.h:436</a></p><h4>Parameters</h4><dl><dt class="is-family-code">bool<b> V</b></dt></dl><h3 id="5009163770E8FCFD"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5009163770E8FCFD">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r55C3D613CECF2206.html"><span class="hljs-function">llvm::IntegerType</span></a><span class="hljs-function">* <span class="hljs-title">getInt128Ty</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a 128-bit integer.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L511">llvm/include/llvm/IR/IRBuilder.h:511</a></p><h3 id="6641607721E77EEA"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6641607721E77EEA">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function">llvm::ConstantInt</span></a><span class="hljs-function">* <span class="hljs-title">getInt16</span><span class="hljs-params">(<span class="hljs-keyword">uint16_t</span> C)</span></span></code></pre></h3><h4>Description</h4><p>Get a constant 16-bit value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L456">llvm/include/llvm/IR/IRBuilder.h:456</a></p><h4>Parameters</h4><dl><dt class="is-family-code">uint16_t<b> C</b></dt></dl><h3 id="35F3F72830662732"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#35F3F72830662732">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r55C3D613CECF2206.html"><span class="hljs-function">llvm::IntegerType</span></a><span class="hljs-function">* <span class="hljs-title">getInt16Ty</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a 16-bit integer.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L496">llvm/include/llvm/IR/IRBuilder.h:496</a></p><h3 id="86D8E17649F97C7F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#86D8E17649F97C7F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r55C3D613CECF2206.html"><span class="hljs-function">llvm::IntegerType</span></a><span class="hljs-function">* <span class="hljs-title">getInt1Ty</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a single bit</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L486">llvm/include/llvm/IR/IRBuilder.h:486</a></p><h3 id="D582B3E55E7047B8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D582B3E55E7047B8">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function">llvm::ConstantInt</span></a><span class="hljs-function">* <span class="hljs-title">getInt32</span><span class="hljs-params">(<span class="hljs-keyword">uint32_t</span> C)</span></span></code></pre></h3><h4>Description</h4><p>Get a constant 32-bit value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L461">llvm/include/llvm/IR/IRBuilder.h:461</a></p><h4>Parameters</h4><dl><dt class="is-family-code">uint32_t<b> C</b></dt></dl><h3 id="C87E329FDCAE6852"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C87E329FDCAE6852">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r55C3D613CECF2206.html"><span class="hljs-function">llvm::IntegerType</span></a><span class="hljs-function">* <span class="hljs-title">getInt32Ty</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a 32-bit integer.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L501">llvm/include/llvm/IR/IRBuilder.h:501</a></p><h3 id="DB2E0EAFCA56B652"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DB2E0EAFCA56B652">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function">llvm::ConstantInt</span></a><span class="hljs-function">* <span class="hljs-title">getInt64</span><span class="hljs-params">(<span class="hljs-keyword">uint64_t</span> C)</span></span></code></pre></h3><h4>Description</h4><p>Get a constant 64-bit value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L466">llvm/include/llvm/IR/IRBuilder.h:466</a></p><h4>Parameters</h4><dl><dt class="is-family-code">uint64_t<b> C</b></dt></dl><h3 id="2DA6321FA0B2635A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2DA6321FA0B2635A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r55C3D613CECF2206.html"><span class="hljs-function">llvm::IntegerType</span></a><span class="hljs-function">* <span class="hljs-title">getInt64Ty</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a 64-bit integer.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L506">llvm/include/llvm/IR/IRBuilder.h:506</a></p><h3 id="583D9DE28AE276A0"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#583D9DE28AE276A0">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function">llvm::ConstantInt</span></a><span class="hljs-function">* <span class="hljs-title">getInt8</span><span class="hljs-params">(<span class="hljs-keyword">uint8_t</span> C)</span></span></code></pre></h3><h4>Description</h4><p>Get a constant 8-bit value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L451">llvm/include/llvm/IR/IRBuilder.h:451</a></p><h4>Parameters</h4><dl><dt class="is-family-code">uint8_t<b> C</b></dt></dl><h3 id="98C1EE08C6F5CB6A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#98C1EE08C6F5CB6A">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r8B66BCD6672AE2B1.html"><span class="hljs-function">llvm::PointerType</span></a><span class="hljs-function">* <span class="hljs-title">getInt8PtrTy</span><span class="hljs-params">(
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> AddrSpace = <span class="hljs-number">0</span>)</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a pointer to an 8-bit integer value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L549">llvm/include/llvm/IR/IRBuilder.h:549</a></p><h4>Parameters</h4><dl><dt class="is-family-code">unsigned int<b> AddrSpace</b> = 0</dt></dl><h3 id="2A09D177CA5DDF0F"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2A09D177CA5DDF0F">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r55C3D613CECF2206.html"><span class="hljs-function">llvm::IntegerType</span></a><span class="hljs-function">* <span class="hljs-title">getInt8Ty</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing an 8-bit integer.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L491">llvm/include/llvm/IR/IRBuilder.h:491</a></p><h3 id="650568A1D537C835"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#650568A1D537C835">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function">llvm::ConstantInt</span></a><span class="hljs-function">* <span class="hljs-title">getIntN</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> N,
                           <span class="hljs-keyword">uint64_t</span> C)</span></span></code></pre></h3><h4>Description</h4><p>Get a constant N-bit value, zero extended or truncated from a 64-bit value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L472">llvm/include/llvm/IR/IRBuilder.h:472</a></p><h4>Parameters</h4><dl><dt class="is-family-code">unsigned int<b> N</b></dt><dt class="is-family-code">uint64_t<b> C</b></dt></dl><h3 id="B86F54D6FC72B0F1"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B86F54D6FC72B0F1">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r55C3D613CECF2206.html"><span class="hljs-function">llvm::IntegerType</span></a><span class="hljs-function">* <span class="hljs-title">getIntNTy</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> N)</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing an N-bit integer.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L514">llvm/include/llvm/IR/IRBuilder.h:514</a></p><h4>Parameters</h4><dl><dt class="is-family-code">unsigned int<b> N</b></dt></dl><h3 id="243F26EF39926559"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#243F26EF39926559">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r55C3D613CECF2206.html"><span class="hljs-function">llvm::IntegerType</span></a><span class="hljs-function">* <span class="hljs-title">getIntPtrTy</span><span class="hljs-params">(
    <span class="hljs-keyword">const</span> </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r36886900CAFBFB15.html"><span class="hljs-function"><span class="hljs-params">llvm::DataLayout</span></span></a><span class="hljs-function"><span class="hljs-params">&amp; DL,
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> AddrSpace = <span class="hljs-number">0</span>)</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a pointer to an integer value.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L554">llvm/include/llvm/IR/IRBuilder.h:554</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="https://docs.hdoc.io/hdoc/llvm-project/r36886900CAFBFB15.html">llvm::DataLayout</a>&amp;<b> DL</b></dt><dt class="is-family-code">unsigned int<b> AddrSpace</b> = 0</dt></dl><h3 id="D2D3AFE63CBB4DAC"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D2D3AFE63CBB4DAC">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">getIsFPConstrained</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Query for the use of constrained floating point math</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L297">llvm/include/llvm/IR/IRBuilder.h:297</a></p><h3 id="7B49E43B690E4F8C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7B49E43B690E4F8C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r8B66BCD6672AE2B1.html"><span class="hljs-function">llvm::PointerType</span></a><span class="hljs-function">* <span class="hljs-title">getPtrTy</span><span class="hljs-params">(
    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> AddrSpace = <span class="hljs-number">0</span>)</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing a pointer.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L544">llvm/include/llvm/IR/IRBuilder.h:544</a></p><h4>Parameters</h4><dl><dt class="is-family-code">unsigned int<b> AddrSpace</b> = 0</dt></dl><h3 id="94FADB0E0716D3E7"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#94FADB0E0716D3E7">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r822119A505FDAFD1.html"><span class="hljs-function">llvm::ConstantInt</span></a><span class="hljs-function">* <span class="hljs-title">getTrue</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Get the constant value for i1 true.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L441">llvm/include/llvm/IR/IRBuilder.h:441</a></p><h3 id="1780C73999E3E892"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1780C73999E3E892">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/r4C0FBD0A3419362A.html"><span class="hljs-function">llvm::Type</span></a><span class="hljs-function">* <span class="hljs-title">getVoidTy</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Fetch the type representing void.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L539">llvm/include/llvm/IR/IRBuilder.h:539</a></p><h3 id="60262D04DB15E371"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#60262D04DB15E371">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">restoreIP</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rC361AF6929CFF2F7.html"><span class="hljs-function"><span class="hljs-params">llvm::IRBuilderBase::InsertPoint</span></span></a><span class="hljs-function"><span class="hljs-params"> IP)</span></span></code></pre></h3><h4>Description</h4><p>Sets the current insert point to a previously-saved location.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L266">llvm/include/llvm/IR/IRBuilder.h:266</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC361AF6929CFF2F7.html">llvm::IRBuilderBase::InsertPoint</a><b> IP</b></dt></dl><h3 id="2DE4EBCBD94FF0A4"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2DE4EBCBD94FF0A4">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC361AF6929CFF2F7.html">llvm::<span class="hljs-function">IRBuilderBase::InsertPoint</span></a><span class="hljs-function"> <span class="hljs-title">saveAndClearIP</span><span class="hljs-params">()</span></span></code></pre></h3><h4>Description</h4><p>Returns the current insert point, clearing it in the process.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L259">llvm/include/llvm/IR/IRBuilder.h:259</a></p><h3 id="3776D8928B9677DC"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3776D8928B9677DC">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rC361AF6929CFF2F7.html">llvm::<span class="hljs-function">IRBuilderBase::InsertPoint</span></a><span class="hljs-function"> <span class="hljs-title">saveIP</span><span class="hljs-params">()</span> <span class="hljs-keyword">const</span></span></code></pre></h3><h4>Description</h4><p>Returns the current insert point.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L254">llvm/include/llvm/IR/IRBuilder.h:254</a></p><h3 id="B75619C832CBC58B"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B75619C832CBC58B">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setConstrainedFPCallAttr</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rBA0095D496BE5B4E.html"><span class="hljs-function"><span class="hljs-params">llvm::CallBase</span></span></a><span class="hljs-function"><span class="hljs-params">* I)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L336">llvm/include/llvm/IR/IRBuilder.h:336</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rBA0095D496BE5B4E.html">llvm::CallBase</a>*<b> I</b></dt></dl><h3 id="97BAC13ABE4CD2CF"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#97BAC13ABE4CD2CF">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setConstrainedFPFunctionAttr</span><span class="hljs-params">()</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L327">llvm/include/llvm/IR/IRBuilder.h:327</a></p><h3 id="F8EE48031647AA44"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F8EE48031647AA44">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setDefaultConstrainedExcept</span><span class="hljs-params">(
    fp::ExceptionBehavior NewExcept)</span></span></code></pre></h3><h4>Description</h4><p>Set the exception handling to be used with constrained floating point</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L300">llvm/include/llvm/IR/IRBuilder.h:300</a></p><h4>Parameters</h4><dl><dt class="is-family-code">fp::ExceptionBehavior<b> NewExcept</b></dt></dl><h3 id="5D251745C6977F9C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5D251745C6977F9C">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setDefaultConstrainedRounding</span><span class="hljs-params">(
    llvm::RoundingMode NewRounding)</span></span></code></pre></h3><h4>Description</h4><p>Set the rounding mode handling to be used with constrained floating point</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L309">llvm/include/llvm/IR/IRBuilder.h:309</a></p><h4>Parameters</h4><dl><dt class="is-family-code">llvm::RoundingMode<b> NewRounding</b></dt></dl><h3 id="A18ED64562EA7FAE"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A18ED64562EA7FAE">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setDefaultFPMathTag</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMathTag)</span></span></code></pre></h3><h4>Description</h4><p>Set the floating point math metadata to be used.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L285">llvm/include/llvm/IR/IRBuilder.h:285</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMathTag</b></dt></dl><h3 id="B7ECE5B3C5923BF1"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B7ECE5B3C5923BF1">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setDefaultOperandBundles</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html"><span class="hljs-function"><span class="hljs-params">ArrayRef</span></span></a><span class="hljs-function"><span class="hljs-params">&lt;llvm::OperandBundleDef&gt; OpBundles)</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L340">llvm/include/llvm/IR/IRBuilder.h:340</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r88137505AF2B6C74.html">ArrayRef</a>&lt;llvm::OperandBundleDef&gt;<b> OpBundles</b></dt></dl><h3 id="75A7D122B466C28C"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#75A7D122B466C28C">¶</a><code class="hdoc-function-code language-cpp hljs"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function">llvm::Instruction</span></a><span class="hljs-function">* <span class="hljs-title">setFPAttrs</span><span class="hljs-params">(
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html"><span class="hljs-function"><span class="hljs-params">llvm::Instruction</span></span></a><span class="hljs-function"><span class="hljs-params">* I,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html"><span class="hljs-function"><span class="hljs-params">llvm::MDNode</span></span></a><span class="hljs-function"><span class="hljs-params">* FPMD,
    </span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rB015E228FFC78DC5.html"><span class="hljs-function"><span class="hljs-params">llvm::FastMathFlags</span></span></a><span class="hljs-function"><span class="hljs-params"> FMF)</span> <span class="hljs-keyword">const</span></span></code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L1151">llvm/include/llvm/IR/IRBuilder.h:1151</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rE266D8602316BABC.html">llvm::Instruction</a>*<b> I</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/r27429CCC2466601C.html">llvm::MDNode</a>*<b> FPMD</b></dt><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rB015E228FFC78DC5.html">llvm::FastMathFlags</a><b> FMF</b></dt></dl><h3 id="E6DC1AE90593488A"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E6DC1AE90593488A">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setFastMathFlags</span><span class="hljs-params">(</span></span><a href="https://docs.hdoc.io/hdoc/llvm-project/rB015E228FFC78DC5.html"><span class="hljs-function"><span class="hljs-params">llvm::FastMathFlags</span></span></a><span class="hljs-function"><span class="hljs-params"> NewFMF)</span></span></code></pre></h3><h4>Description</h4><p>Set the fast-math flags to be used with generated fp-math operators</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L288">llvm/include/llvm/IR/IRBuilder.h:288</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://docs.hdoc.io/hdoc/llvm-project/rB015E228FFC78DC5.html">llvm::FastMathFlags</a><b> NewFMF</b></dt></dl><h3 id="50B233455E3633A8"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#50B233455E3633A8">¶</a><code class="hdoc-function-code language-cpp hljs"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setIsFPConstrained</span><span class="hljs-params">(<span class="hljs-keyword">bool</span> IsCon)</span></span></code></pre></h3><h4>Description</h4><p>Enable/
Disable use of constrained floating point math. When enabled the CreateF
 &lt;op &gt;() calls instead create constrained floating point intrinsic
 calls. Fast math flags are unaffected by this setting.</p><p>Declared at: <a class="is-family-code" href="https://github.com/hdoc/llvm-project/blob/release/15.x//llvm/include/llvm/IR/IRBuilder.h#L294">llvm/include/llvm/IR/IRBuilder.h:294</a></p><h4>Parameters</h4><dl><dt class="is-family-code">bool<b> IsCon</b></dt></dl></main></div></div></div></section></div><footer class="footer"><p>Documentation for LLVM/Clang 15.x.</p><p>Generated by <a href="https://hdoc.io/">hdoc</a> version 1.4.0-eb16166 on 2022-10-27T00:45:30 UTC.</p><p class="has-text-grey-light">19AD43E11B2996</p></footer></body></html>